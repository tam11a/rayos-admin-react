{"version":3,"file":"static/js/35.9b13bf18.chunk.js","mappings":"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","sources":["components/ButtonSwitch.js","components/DataTable/CustomNoRowsOverlay.js","components/DataTable/index.js","hooks/usePaginate.js","pages/Customer/index.js","query/customer.js","query/stats.js","style/tableOptions.js"],"sourcesContent":["import { Box, Switch, styled } from \"@mui/material\";\nimport React from \"react\";\n\nconst ButtonSwitch = styled((props) => (\n  <Switch focusVisibleClassName=\".Mui-focusVisible\" {...props} />\n))(({ theme }) => ({\n  width: 44,\n  height: 26,\n  padding: 5,\n  \"& .MuiSwitch-switchBase\": {\n    margin: 1,\n    padding: 6,\n    transform: \"translateX(0px)\",\n    \"&.Mui-checked\": {\n      color: \"#fff\",\n      transform: \"translateX(18px)\",\n    },\n    \"&.Mui-checked + .MuiSwitch-track\": {},\n  },\n  \"& .MuiSwitch-thumb\": {\n    width: 12,\n    height: 12,\n  },\n  \"& .MuiSwitch-track\": {\n    borderRadius: 16,\n  },\n}));\n\nexport default ButtonSwitch;\n","import { Box, styled } from \"@mui/material\";\n\nconst StyledGridOverlay = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  height: \"100%\",\n  \"& .ant-empty-img-1\": {\n    fill: theme.palette.mode === \"light\" ? \"#aeb8c2\" : \"#262626\",\n  },\n  \"& .ant-empty-img-2\": {\n    fill: theme.palette.mode === \"light\" ? \"#f5f5f7\" : \"#595959\",\n  },\n  \"& .ant-empty-img-3\": {\n    fill: theme.palette.mode === \"light\" ? \"#dce0e6\" : \"#434343\",\n  },\n  \"& .ant-empty-img-4\": {\n    fill: theme.palette.mode === \"light\" ? \"#fff\" : \"#1c1c1c\",\n  },\n  \"& .ant-empty-img-5\": {\n    fillOpacity: theme.palette.mode === \"light\" ? \"0.8\" : \"0.08\",\n    fill: theme.palette.mode === \"light\" ? \"#f5f5f5\" : \"#fff\",\n  },\n}));\n\nexport default function CustomNoRowsOverlay() {\n  return (\n    <StyledGridOverlay>\n      <svg\n        width=\"120\"\n        height=\"100\"\n        viewBox=\"0 0 184 152\"\n        aria-hidden\n        focusable=\"false\"\n      >\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <g transform=\"translate(24 31.67)\">\n            <ellipse\n              className=\"ant-empty-img-5\"\n              cx=\"67.797\"\n              cy=\"106.89\"\n              rx=\"67.797\"\n              ry=\"12.668\"\n            />\n            <path\n              className=\"ant-empty-img-1\"\n              d=\"M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z\"\n            />\n            <path\n              className=\"ant-empty-img-2\"\n              d=\"M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z\"\n            />\n            <path\n              className=\"ant-empty-img-3\"\n              d=\"M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zM42.94 49.767h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zM42.94 61.53h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zM121.813 105.032c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569c0 .617-.077 1.216-.221 1.789z\"\n            />\n          </g>\n          <path\n            className=\"ant-empty-img-3\"\n            d=\"M149.121 33.292l-6.83 2.65a1 1 0 0 1-1.317-1.23l1.937-6.207c-2.589-2.944-4.109-6.534-4.109-10.408C138.802 8.102 148.92 0 161.402 0 173.881 0 184 8.102 184 18.097c0 9.995-10.118 18.097-22.599 18.097-4.528 0-8.744-1.066-12.28-2.902z\"\n          />\n          <g className=\"ant-empty-img-4\" transform=\"translate(149.65 15.383)\">\n            <ellipse cx=\"20.654\" cy=\"3.167\" rx=\"2.849\" ry=\"2.815\" />\n            <path d=\"M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z\" />\n          </g>\n        </g>\n      </svg>\n      <Box sx={{ mt: 1 }}>No Data Found!</Box>\n    </StyledGridOverlay>\n  );\n}\n","import { Box } from \"@mui/material\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport React from \"react\";\nimport CustomNoRowsOverlay from \"./CustomNoRowsOverlay\";\n\nconst Index = ({ columns, rows, isLoading, onCellClick, ...others }) => {\n  return (\n    <Box\n      sx={{\n        height: isLoading || !rows.length ? \"400px\" : \"fit-content\",\n        \"& .MuiDataGrid-columnHeaders\": {\n          backgroundColor: \"#E5E5E5\",\n          color: \"black\",\n          fontWeight: 900,\n          fontSize: 14,\n        },\n      }}\n    >\n      <DataGrid\n        headerAlign\n        disableColumnMenu\n        disableColumnFilter\n        disableSelectionOnClick={true}\n        rowsPerPageOptions={[5, 10, 25, 50, 100]}\n        autoHeight={!(isLoading || !rows.length)}\n        columns={columns}\n        rows={rows}\n        loading={isLoading}\n        components={{\n          NoRowsOverlay: CustomNoRowsOverlay,\n        }}\n        sx={{\n          \"& .MuiDataGrid-columnHeader:focus-within, & .MuiDataGrid-cell:focus-within\":\n            {\n              outline: \"none !important\",\n            },\n        }}\n        {...others}\n      />\n    </Box>\n  );\n};\n\nexport default Index;\n","import React from \"react\";\n\nconst usePaginate = (args) => {\n  const [params, setParams] = React.useState({\n    limit: args?.defaultParams?.limit || 10,\n    page: args?.defaultParams?.page || 1,\n    search: args?.defaultParams?.search || \"\",\n    filters: args?.defaultParams?.filter || {},\n  });\n\n  const setSearch = (txt) =>\n    setParams({\n      ...params,\n      search: txt,\n    });\n\n  const setPage = (newPage) =>\n    setParams({\n      ...params,\n      page: newPage + 1,\n    });\n\n  const setLimit = (newLimit) =>\n    setParams({\n      ...params,\n      limit: newLimit,\n    });\n\n  const getFilter = (key) => params?.filters?.[key] || undefined;\n  const setFilterField = (key, value) =>\n    setParams({\n      ...params,\n      filters: {\n        ...params?.filters,\n        [key]: value,\n      },\n    });\n\n  const getQueryParams = () => {\n    return JSON.parse(\n      JSON.stringify({\n        ...params,\n        filters: undefined,\n        ...params.filters,\n      })\n    );\n  };\n\n  return {\n    params,\n    search: params?.search,\n    setSearch,\n    page: (params?.page || 1) - 1,\n    setPage,\n    limit: params?.limit,\n    setLimit,\n    watch: getFilter,\n    setFilterField,\n    getQueryParams,\n  };\n};\n\nexport default usePaginate;\n","import React from \"react\";\n\nimport {\n  IconButton,\n  Avatar,\n  Chip,\n  Container,\n  Paper,\n  Grid,\n  InputBase,\n  Select,\n  MenuItem,\n  ButtonGroup,\n  Button,\n} from \"@mui/material\";\n\nimport StateViewer from \"../../components/StateViewer\";\nimport DataTable from \"../../components/DataTable\";\nimport { useGetAllCustomer, useToggleCustomer } from \"../../query/customer\";\nimport ButtonSwitch from \"../../components/ButtonSwitch\";\n\nimport tableOptionsStyle from \"../../style/tableOptions\";\nimport { responseHandler } from \"../../utilities/response-handler\";\nimport snackContext from \"../../context/snackProvider\";\nimport { Link } from \"react-router-dom\";\nimport { getAttachment } from \"../../service/instance\";\nimport { useGetCustomerStats } from \"../../query/stats\";\nimport usePaginate from \"../../hooks/usePaginate\";\n\nconst Index = () => {\n  const snack = React.useContext(snackContext);\n  const {\n    limit,\n    setLimit,\n    page,\n    setPage,\n    search,\n    setSearch,\n    watch,\n    setFilterField,\n    getQueryParams,\n  } = usePaginate();\n\n  const { mutateAsync: toggleCustomer } = useToggleCustomer();\n\n  const updateState = async (id) => {\n    const res = await responseHandler(() => toggleCustomer(id));\n    if (res.status) snack.createSnack(res.msg);\n    else snack.createSnack(res.msg, \"error\");\n  };\n\n  // get user data\n  const { data, isLoading } = useGetAllCustomer(getQueryParams());\n  const { data: custStats } = useGetCustomerStats();\n\n  const cols = [\n    {\n      headerName: \"#\",\n      headerAlign: \"center\",\n      field: \"receiver_number\",\n      align: \"left\",\n      width: 120,\n      // flex: 1,\n      sortable: false,\n      renderCell: (params) => (\n        <Chip\n          avatar={\n            <Avatar\n              alt={params.row?.userName}\n              src={getAttachment(params.row?.image)}\n            />\n          }\n          label={params.row?.userName}\n          variant=\"outlined\"\n          to={`/customer/${params.row?._id}`}\n          component={Link}\n          onClick={() => {}}\n        />\n      ),\n    },\n    // {\n    //   headerName: \"Username\",\n    //   headerAlign: \"center\",\n    //   field: \"userName\",\n    //   align: \"center\",\n    //   width: 150,\n    // },\n    {\n      headerName: \"Full Name\",\n      headerAlign: \"center\",\n      field: \"fullName\",\n      align: \"center\",\n      width: 150,\n      flex: 1,\n    },\n    {\n      headerName: \"Phone\",\n      headerAlign: \"center\",\n      field: \"phone\",\n      align: \"center\",\n      flex: 1,\n      width: 160,\n    },\n    {\n      headerName: \"Email\",\n      headerAlign: \"center\",\n      field: \"email\",\n      width: 250,\n      flex: 2,\n      align: \"center\",\n    },\n    {\n      headerName: \"Total Orders\",\n      headerAlign: \"center\",\n      field: \"totalOrders\",\n      align: \"center\",\n      width: 120,\n      // flex: 1,\n      renderCell: (params) => params.row?.totalOrders,\n    },\n    {\n      headerName: \"Status\",\n      headerAlign: \"center\",\n      field: \"status\",\n      align: \"center\",\n      // flex: 1,\n      width: 120,\n      renderCell: (params) => (\n        <ButtonSwitch\n          checked={params.row?.isActive}\n          color={\"success\"}\n          onClick={() => {\n            updateState(params.row?._id);\n          }}\n        />\n      ),\n    },\n  ];\n  return (\n    <>\n      <Container\n        sx={{\n          py: 2,\n        }}\n      >\n        <StateViewer\n          stateList={[\n            {\n              num: custStats?.data?.data?.total,\n              title: \"Total User\",\n            },\n            {\n              num: custStats?.data?.data?.active,\n              title: \"Active User\",\n            },\n            {\n              num: custStats?.data?.data?.blocked,\n              title: \"Blocked User\",\n            },\n          ]}\n        />\n        <Paper\n          elevation={0}\n          sx={{\n            p: 2,\n            border: \"1px solid #ccc\",\n            my: 2,\n          }}\n        >\n          <Grid\n            container\n            rowGap={1}\n            columnGap={1}\n            alignItems={\"center\"}\n            justifyContent={\"space-between\"}\n          >\n            <Grid item xs={12} sm={8.7}>\n              <InputBase\n                placeholder=\"Search Customer by Phone Number\"\n                sx={tableOptionsStyle}\n                onChange={(e) => setSearch(e.target.value)}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} sm={3}>\n              <Select\n                sx={{\n                  ...tableOptionsStyle,\n                }}\n                value={watch(\"isActive\") || \"null\"}\n                onChange={(e) => {\n                  setFilterField(\n                    \"isActive\",\n                    e.target.value === \"null\" ? undefined : e.target.value\n                  );\n                }}\n                fullWidth\n              >\n                <MenuItem value={\"null\"} selected>\n                  All\n                </MenuItem>\n                <MenuItem value={\"true\"}>Active</MenuItem>\n                <MenuItem value={\"false\"}>Blocked</MenuItem>\n              </Select>\n            </Grid>\n          </Grid>\n        </Paper>\n        <DataTable\n          sx={{\n            p: 2,\n            my: 2,\n          }}\n          columns={cols}\n          rows={data?.data?.data || []}\n          isLoading={isLoading}\n          paginationMode={\"server\"}\n          rowCount={data?.data?.total || 0}\n          getRowId={(row) => row._id}\n          page={page}\n          onPageChange={setPage}\n          pageSize={limit}\n          onPageSizeChange={setLimit}\n        />\n      </Container>\n    </>\n  );\n};\n\nexport default Index;\n","import { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport instance from \"../service/instance\";\n\nconst getAllCustomer = (params) => {\n  return instance.get(`customer`, {\n    params,\n  });\n};\n\nexport const useGetAllCustomer = (params) => {\n  return useQuery([\"get-all-customer\", params], () => getAllCustomer(params), {\n    // enabled: !!id,\n  });\n};\n\nconst getCustomerByID = (customer_id) => {\n  return instance.get(`customer/${customer_id}`);\n};\n\nexport const useGetCustomerByID = (customer_id) => {\n  return useQuery(\n    [\"get-customer-by-id\", customer_id],\n    () => getCustomerByID(customer_id),\n    {\n      // refetchInterval: 20000,\n    }\n  );\n};\n\nconst updateCustomer = ({ customer_id, data }) => {\n  return instance.patch(`customer/${customer_id}`, data);\n};\n\nexport const useUpdateCustomer = () => {\n  const queryClient = useQueryClient();\n  return useMutation(updateCustomer, {\n    onSuccess: () => {\n      queryClient.invalidateQueries(\"get-all-store\");\n      queryClient.invalidateQueries(\"get-store-by-id\");\n    },\n  });\n};\n\nconst toggleCustomer = (id) => {\n  return instance.put(`customer/${id}`);\n};\n\nexport const useToggleCustomer = () => {\n  const queryClient = useQueryClient();\n  return useMutation(toggleCustomer, {\n    onSuccess: () => {\n      queryClient.invalidateQueries(\"get-all-customer\");\n      queryClient.invalidateQueries(\"get-customer-by-id\");\n    },\n  });\n};\n","import { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport instance from \"../service/instance\";\n\nconst getProductStats = () => {\n  return instance.get(`stats/product`);\n};\n\nexport const useGetProductStats = () => {\n  return useQuery([\"get-product-stats\"], () => getProductStats(), {\n    // refetchInterval: 20000,\n  });\n};\n\nconst getCustomerStats = () => {\n  return instance.get(`stats/customer`);\n};\n\nexport const useGetCustomerStats = () => {\n  return useQuery([\"get-customer-stats\"], () => getCustomerStats(), {\n    // refetchInterval: 20000,\n  });\n};\n\nconst getStoreStats = () => {\n  return instance.get(`stats/store`);\n};\n\nexport const useGetStoreStats = () => {\n  return useQuery([\"get-store-stats\"], () => getStoreStats(), {\n    // refetchInterval: 20000,\n  });\n};\n\nconst getOrderStats = () => {\n  return instance.get(`stats/order`);\n};\n\nexport const useGetOrderStats = () => {\n  return useQuery([\"get-orders-stats\"], () => getOrderStats(), {\n    // refetchInterval: 20000,\n  });\n};\n\nconst getCatStats = () => {\n  return instance.get(`stats/category`);\n};\n\nexport const useGetCatStats = () => {\n  return useQuery([\"get-category-stats\"], () => getCatStats(), {\n    // refetchInterval: 20000,\n  });\n};\n","const tableOptionsStyle = {\n  bgcolor: \"#f3f3f3\",\n  borderRadius: \"4px\",\n  px: \"10px\",\n  height: \"52px\",\n  outline: \"none\",\n  \"&, & *\": {\n    border: \"transparent !important\",\n    outline: \"none !important\",\n  },\n};\n\nexport default tableOptionsStyle;\n"],"names":["ButtonSwitch","styled","props","focusVisibleClassName","theme","width","height","padding","margin","transform","color","borderRadius","StyledGridOverlay","display","flexDirection","alignItems","justifyContent","fill","palette","mode","fillOpacity","CustomNoRowsOverlay","viewBox","focusable","fillRule","className","cx","cy","rx","ry","d","Box","sx","mt","columns","rows","isLoading","others","onCellClick","length","backgroundColor","fontWeight","fontSize","DataGrid","headerAlign","disableColumnMenu","disableColumnFilter","disableSelectionOnClick","rowsPerPageOptions","autoHeight","loading","components","NoRowsOverlay","outline","args","React","limit","defaultParams","page","search","filters","filter","params","setParams","setSearch","txt","setPage","newPage","setLimit","newLimit","watch","key","undefined","setFilterField","value","getQueryParams","JSON","parse","stringify","snack","snackContext","usePaginate","toggleCustomer","useToggleCustomer","mutateAsync","updateState","id","responseHandler","res","status","createSnack","msg","useGetAllCustomer","data","custStats","useGetCustomerStats","cols","headerName","field","align","sortable","renderCell","avatar","alt","row","userName","src","getAttachment","image","label","variant","to","_id","component","Link","onClick","flex","totalOrders","checked","isActive","py","stateList","num","total","title","active","blocked","elevation","p","border","my","container","rowGap","columnGap","item","xs","sm","placeholder","tableOptionsStyle","onChange","e","target","fullWidth","selected","paginationMode","rowCount","getRowId","onPageChange","pageSize","onPageSizeChange","useQuery","instance","getAllCustomer","useGetCustomerByID","customer_id","getCustomerByID","updateCustomer","useUpdateCustomer","queryClient","useQueryClient","useMutation","onSuccess","invalidateQueries","useGetProductStats","useGetStoreStats","useGetOrderStats","useGetCatStats","bgcolor","px"],"sourceRoot":""}