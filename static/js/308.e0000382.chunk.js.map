{"version":3,"file":"static/js/308.e0000382.chunk.js","mappings":"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","sources":["components/CPaper.js","assets/ImageUploadIconPreview.svg","components/DropZone.js","pages/Images/index.js","query/attachments.js"],"sourcesContent":["import { styled } from \"@mui/material/styles\";\nimport { Paper } from \"@mui/material\";\n\nconst CPaper = styled(Paper)(({ theme }) => ({\n  padding: \"10px\",\n  boxShadow: \"unset\",\n  border: \"2px solid #00000011\",\n}));\n\nexport default CPaper;\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgImageUploadIconPreview(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 50,\n    height: 50,\n    viewBox: \"0 0 50 50\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M42.1053 13.1579V21.0263C42.1053 21.0263 36.8684 21.0526 36.8421 21.0263V13.1579H28.9474C28.9474 13.1579 28.9737 7.92105 28.9474 7.89474H36.8421V0H42.1053V7.89474H50V13.1579H42.1053ZM34.2105 23.6842V15.7895H26.3158V7.89474H0V50H42.1053V23.6842H34.2105ZM5.26316 44.7368L13.1579 34.2105L18.4211 42.1053L26.3158 31.5789L36.8421 44.7368H5.26316Z\",\n    fill: \"#401B60\",\n    fillOpacity: 0.17\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgImageUploadIconPreview);\nexport default __webpack_public_path__ + \"static/media/ImageUploadIconPreview.ef03b177a4b3ff4e67d793aff4f62a46.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { Avatar, Box, IconButton, Typography } from \"@mui/material\";\nimport ImageIcon from \"../assets/ImageUploadIconPreview.svg\";\nimport { MdDelete } from \"react-icons/md\";\nimport snackContext from \"../context/snackProvider\";\n\nconst DropZone = ({\n  onChange,\n  maxSize,\n  extension,\n  defaultValue,\n  onDelete,\n  ...others\n}) => {\n  const snack = React.useContext(snackContext);\n  const [files, setFiles] = useState([]);\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    accept: extension || [],\n    // maxFiles: 1,\n    minSize: 0,\n    maxSize: maxSize || 5242880,\n    multiple: true,\n    // onError:\n    onDropAccepted: (acceptedFiles) => {\n      setFiles(\n        acceptedFiles.map((file) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          })\n        )\n      );\n    },\n    onDropRejected: (rejectedFiles) => {\n      snack.createSnack(rejectedFiles[0].errors[0].message, \"error\");\n    },\n  });\n\n  const resOnChange = async (file) => {\n    const res = await onChange(file);\n    if (!res) {\n      setFiles([]);\n    }\n  };\n\n  useEffect(() => {\n    if (\n      files.length &&\n      !(defaultValue && files[0].preview === defaultValue.preview)\n    ) {\n      if (typeof onChange === \"function\") {\n        resOnChange(files);\n      }\n    }\n  }, [files]);\n\n  useEffect(() => {\n    if (defaultValue) setFiles([defaultValue]);\n  }, [defaultValue]);\n\n  return (\n    <Box\n      sx={{\n        position: \"relative\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        height: \"125px\",\n        width: \"125px\",\n        border: \"2px dashed\",\n        borderColor: \"#00000022\",\n        rowGap: 0.5,\n        ...others.sx,\n      }}\n      {...others}\n    >\n      <DragFileHere\n        getRootProps={getRootProps}\n        getInputProps={getInputProps}\n        isDragActive={isDragActive}\n        isImageAdded={!!files.length}\n      />\n      {files.length ? (\n        <Box\n          sx={{\n            position: \"absolute\",\n            height: \"125px\",\n            width: \"125px\",\n            p: 1,\n            \"&:hover > div\": {\n              display: \"flex\",\n            },\n          }}\n        >\n          <Avatar\n            src={files[0].preview}\n            alt={files[0].name}\n            style={{\n              height: \"108px\",\n              width: \"108px\",\n              m: \"12px\",\n              borderRadius: 0,\n            }}\n          />\n          <Box\n            sx={{\n              display: \"none\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              flexDirection: \"row\",\n              height: \"100%\",\n              width: \"100%\",\n              background: \"#2D323Faa\",\n              position: \"absolute\",\n              top: 0,\n              left: 0,\n            }}\n          >\n            <IconButton\n              color={\"secondary\"}\n              onClick={async () => {\n                if (typeof onDelete === \"function\") {\n                  const res = await onDelete(files[0]);\n                  if (res) setFiles([]);\n                }\n              }}\n            >\n              <MdDelete />\n            </IconButton>\n          </Box>\n        </Box>\n      ) : (\n        <></>\n      )}\n    </Box>\n  );\n};\n\nconst DragFileHere = ({\n  getRootProps,\n  getInputProps,\n  isDragActive,\n  isImageAdded,\n}) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        padding: \"15px\",\n      }}\n      {...getRootProps()}\n    >\n      <input {...getInputProps()} />\n      {!isDragActive ? (\n        <>\n          {!isImageAdded && (\n            <>\n              <img\n                src={ImageIcon}\n                alt={\"drag file here\"}\n                height={\"45px\"}\n                style={{\n                  marginLeft: \"8px\",\n                  pointerEvents: \"none\",\n                  userSelect: \"none\",\n                }}\n              />\n              <Typography\n                variant={\"overline\"}\n                sx={{\n                  textTransform: \"capitalize\",\n                  color: \"#aaa\",\n                }}\n              >\n                Drag File Here\n              </Typography>\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          <Typography\n            variant={\"overline\"}\n            sx={{\n              textTransform: \"capitalize\",\n              color: \"#666\",\n            }}\n          >\n            DROP HERE!\n          </Typography>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default DropZone;\n","import { Container, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport CPaper from \"../../components/CPaper\";\nimport DropZone from \"../../components/DropZone\";\nimport snackContext from \"../../context/snackProvider\";\nimport {\n  useDeleteFeedImage,\n  useGetAllFeedImages,\n  usePostFeedImage,\n} from \"../../query/attachments\";\nimport { getAttachment } from \"../../service/instance\";\nimport { responseHandler } from \"../../utilities/response-handler\";\n\nconst Index = () => {\n  const snack = React.useContext(snackContext);\n  const [feedImages, setFeedImages] = React.useState([]);\n  const { data: feedImageData } = useGetAllFeedImages();\n\n  const { mutateAsync: deleteFeedImage } = useDeleteFeedImage();\n\n  const deleteImage = async (id) => {\n    const res = await responseHandler(() => deleteFeedImage(id));\n    if (res.status) {\n      snack.createSnack(res.msg);\n    } else {\n      snack.createSnack(res.msg, \"error\");\n    }\n  };\n\n  const { mutateAsync: postFeedImage } = usePostFeedImage();\n\n  const postImage = async (images) => {\n    const res = await responseHandler(\n      () =>\n        postFeedImage({\n          \"Files[]\": images,\n        }),\n      [201]\n    );\n    if (res.status) {\n      snack.createSnack(res.msg);\n    } else {\n      snack.createSnack(res.msg, \"error\");\n    }\n  };\n\n  React.useEffect(() => {\n    if (!feedImageData) return;\n    setFeedImages(feedImageData?.data?.data || []);\n  }, [feedImageData]);\n\n  return (\n    <>\n      <Container\n        sx={{\n          py: 2,\n        }}\n      >\n        <Typography variant={\"h5\"} fontWeight={\"600\"}>\n          News Feed\n        </Typography>\n        <CPaper\n          sx={{\n            my: 1,\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            flexWrap: \"wrap\",\n            rowGap: 1,\n            columnGap: 1,\n          }}\n        >\n          {feedImages?.map?.((fimg) => (\n            <React.Fragment key={fimg._id}>\n              <DropZone\n                defaultValue={{\n                  preview: getAttachment(fimg.image),\n                  id: fimg._id,\n                }}\n                onDelete={(data) => deleteImage(data.id)}\n              />\n            </React.Fragment>\n          ))}\n          <DropZone onChange={(data) => postImage(data)} />\n        </CPaper>\n      </Container>\n    </>\n  );\n};\n\nexport default Index;\n","import { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport instance from \"../service/instance\";\n\nconst getAllFeedImages = () => {\n  return instance.get(`feed/image`);\n};\n\nexport const useGetAllFeedImages = () => {\n  return useQuery([\"get-feed-images\"], () => getAllFeedImages(), {\n    // refetchInterval: 20000,\n  });\n};\n\nconst delFeedImage = (id) => {\n  return instance.delete(`feed/image/${id}`);\n};\n\nexport const useDeleteFeedImage = () => {\n  const queryClient = useQueryClient();\n  return useMutation(delFeedImage, {\n    onSuccess: () => queryClient.invalidateQueries(\"get-feed-images\"),\n  });\n};\n\nconst postFeedImage = (data) => {\n  return instance.postForm(`feed/image`, data);\n};\n\nexport const usePostFeedImage = () => {\n  const queryClient = useQueryClient();\n  return useMutation(postFeedImage, {\n    onSuccess: () => queryClient.invalidateQueries(\"get-feed-images\"),\n  });\n};\n\n\nconst postImage = (imageList) => {\n  return instance.postForm(`attachments`, {\n    \"Files[]\": [...imageList],\n  });\n};\n\nexport const usePostImage = () => {\n  // const queryClient = useQueryClient();\n  return useMutation(postImage, {\n    // onSuccess: () => queryClient.invalidateQueries(\"get-feed-images\"),\n  });\n};\n\n"],"names":["CPaper","styled","Paper","theme","padding","boxShadow","border","DragFileHere","getRootProps","getInputProps","isDragActive","isImageAdded","style","display","alignItems","justifyContent","flexDirection","Typography","variant","sx","textTransform","color","src","ImageIcon","alt","height","marginLeft","pointerEvents","userSelect","onChange","maxSize","extension","defaultValue","onDelete","others","snack","React","snackContext","useState","files","setFiles","useDropzone","accept","minSize","multiple","onDropAccepted","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","onDropRejected","rejectedFiles","createSnack","errors","message","resOnChange","useEffect","length","Box","position","width","borderColor","rowGap","p","Avatar","name","m","borderRadius","background","top","left","IconButton","onClick","feedImages","setFeedImages","feedImageData","useGetAllFeedImages","data","deleteFeedImage","useDeleteFeedImage","mutateAsync","deleteImage","id","responseHandler","res","status","msg","postFeedImage","usePostFeedImage","postImage","images","py","fontWeight","my","flexWrap","columnGap","fimg","getAttachment","image","_id","useQuery","instance","delFeedImage","queryClient","useQueryClient","useMutation","onSuccess","invalidateQueries","imageList","usePostImage"],"sourceRoot":""}