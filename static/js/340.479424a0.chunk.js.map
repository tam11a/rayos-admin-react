{"version":3,"file":"static/js/340.479424a0.chunk.js","mappings":"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","sources":["components/ButtonSwitch.js","components/DataTable/CustomNoRowsOverlay.js","components/DataTable/index.js","components/ShowError.js","hooks/usePaginate.js","pages/Category/CreateDrawer.js","pages/Category/index.js","query/category.js","query/stats.js","style/tableOptions.js"],"sourcesContent":["import { Box, Switch, styled } from \"@mui/material\";\nimport React from \"react\";\n\nconst ButtonSwitch = styled((props) => (\n  <Switch focusVisibleClassName=\".Mui-focusVisible\" {...props} />\n))(({ theme }) => ({\n  width: 44,\n  height: 26,\n  padding: 5,\n  \"& .MuiSwitch-switchBase\": {\n    margin: 1,\n    padding: 6,\n    transform: \"translateX(0px)\",\n    \"&.Mui-checked\": {\n      color: \"#fff\",\n      transform: \"translateX(18px)\",\n    },\n    \"&.Mui-checked + .MuiSwitch-track\": {},\n  },\n  \"& .MuiSwitch-thumb\": {\n    width: 12,\n    height: 12,\n  },\n  \"& .MuiSwitch-track\": {\n    borderRadius: 16,\n  },\n}));\n\nexport default ButtonSwitch;\n","import { Box, styled } from \"@mui/material\";\n\nconst StyledGridOverlay = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  height: \"100%\",\n  \"& .ant-empty-img-1\": {\n    fill: theme.palette.mode === \"light\" ? \"#aeb8c2\" : \"#262626\",\n  },\n  \"& .ant-empty-img-2\": {\n    fill: theme.palette.mode === \"light\" ? \"#f5f5f7\" : \"#595959\",\n  },\n  \"& .ant-empty-img-3\": {\n    fill: theme.palette.mode === \"light\" ? \"#dce0e6\" : \"#434343\",\n  },\n  \"& .ant-empty-img-4\": {\n    fill: theme.palette.mode === \"light\" ? \"#fff\" : \"#1c1c1c\",\n  },\n  \"& .ant-empty-img-5\": {\n    fillOpacity: theme.palette.mode === \"light\" ? \"0.8\" : \"0.08\",\n    fill: theme.palette.mode === \"light\" ? \"#f5f5f5\" : \"#fff\",\n  },\n}));\n\nexport default function CustomNoRowsOverlay() {\n  return (\n    <StyledGridOverlay>\n      <svg\n        width=\"120\"\n        height=\"100\"\n        viewBox=\"0 0 184 152\"\n        aria-hidden\n        focusable=\"false\"\n      >\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <g transform=\"translate(24 31.67)\">\n            <ellipse\n              className=\"ant-empty-img-5\"\n              cx=\"67.797\"\n              cy=\"106.89\"\n              rx=\"67.797\"\n              ry=\"12.668\"\n            />\n            <path\n              className=\"ant-empty-img-1\"\n              d=\"M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z\"\n            />\n            <path\n              className=\"ant-empty-img-2\"\n              d=\"M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z\"\n            />\n            <path\n              className=\"ant-empty-img-3\"\n              d=\"M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zM42.94 49.767h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zM42.94 61.53h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zM121.813 105.032c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569c0 .617-.077 1.216-.221 1.789z\"\n            />\n          </g>\n          <path\n            className=\"ant-empty-img-3\"\n            d=\"M149.121 33.292l-6.83 2.65a1 1 0 0 1-1.317-1.23l1.937-6.207c-2.589-2.944-4.109-6.534-4.109-10.408C138.802 8.102 148.92 0 161.402 0 173.881 0 184 8.102 184 18.097c0 9.995-10.118 18.097-22.599 18.097-4.528 0-8.744-1.066-12.28-2.902z\"\n          />\n          <g className=\"ant-empty-img-4\" transform=\"translate(149.65 15.383)\">\n            <ellipse cx=\"20.654\" cy=\"3.167\" rx=\"2.849\" ry=\"2.815\" />\n            <path d=\"M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z\" />\n          </g>\n        </g>\n      </svg>\n      <Box sx={{ mt: 1 }}>No Data Found!</Box>\n    </StyledGridOverlay>\n  );\n}\n","import { Box } from \"@mui/material\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport React from \"react\";\nimport CustomNoRowsOverlay from \"./CustomNoRowsOverlay\";\n\nconst Index = ({ columns, rows, isLoading, onCellClick, ...others }) => {\n  return (\n    <Box\n      sx={{\n        height: isLoading || !rows.length ? \"400px\" : \"fit-content\",\n        \"& .MuiDataGrid-columnHeaders\": {\n          backgroundColor: \"#E5E5E5\",\n          color: \"black\",\n          fontWeight: 900,\n          fontSize: 14,\n        },\n      }}\n    >\n      <DataGrid\n        headerAlign\n        disableColumnMenu\n        disableColumnFilter\n        disableSelectionOnClick={true}\n        rowsPerPageOptions={[5, 10, 25, 50, 100]}\n        autoHeight={!(isLoading || !rows.length)}\n        columns={columns}\n        rows={rows}\n        loading={isLoading}\n        components={{\n          NoRowsOverlay: CustomNoRowsOverlay,\n        }}\n        sx={{\n          \"& .MuiDataGrid-columnHeader:focus-within, & .MuiDataGrid-cell:focus-within\":\n            {\n              outline: \"none !important\",\n            },\n        }}\n        {...others}\n      />\n    </Box>\n  );\n};\n\nexport default Index;\n","import { Alert, AlertTitle, Collapse } from \"@mui/material\";\nimport React from \"react\";\n\nconst ShowError = ({ err }) => {\n  const [open, setOpen] = React.useState(false);\n  React.useEffect(() => setOpen(!!err), [err]);\n  return (\n    <Collapse\n      in={open}\n      sx={{\n        width: \"100%\",\n      }}\n    >\n      <Alert\n        severity=\"error\"\n        sx={{\n          width: \"100%\",\n        }}\n        onClose={() => setOpen(false)}\n      >\n        {err?.type === \"required\"\n          ? \"This Field is Required!\"\n          : err?.message || \"Something wrong here!\"}\n      </Alert>\n    </Collapse>\n  );\n};\n\nexport default ShowError;\n","import React from \"react\";\n\nconst usePaginate = (args) => {\n  const [params, setParams] = React.useState({\n    limit: args?.defaultParams?.limit || 10,\n    page: args?.defaultParams?.page || 1,\n    search: args?.defaultParams?.search || \"\",\n    filters: args?.defaultParams?.filter || {},\n  });\n\n  const setSearch = (txt) =>\n    setParams({\n      ...params,\n      search: txt,\n    });\n\n  const setPage = (newPage) =>\n    setParams({\n      ...params,\n      page: newPage + 1,\n    });\n\n  const setLimit = (newLimit) =>\n    setParams({\n      ...params,\n      limit: newLimit,\n    });\n\n  const getFilter = (key) => params?.filters?.[key] || undefined;\n  const setFilterField = (key, value) =>\n    setParams({\n      ...params,\n      filters: {\n        ...params?.filters,\n        [key]: value,\n      },\n    });\n\n  const getQueryParams = () => {\n    return JSON.parse(\n      JSON.stringify({\n        ...params,\n        filters: undefined,\n        ...params.filters,\n      })\n    );\n  };\n\n  return {\n    params,\n    search: params?.search,\n    setSearch,\n    page: (params?.page || 1) - 1,\n    setPage,\n    limit: params?.limit,\n    setLimit,\n    watch: getFilter,\n    setFilterField,\n    getQueryParams,\n  };\n};\n\nexport default usePaginate;\n","import {\n  Button,\n  Divider,\n  Drawer,\n  IconButton,\n  InputBase,\n  LinearProgress,\n  List,\n  ListItem,\n  ListItemText,\n} from \"@mui/material\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { BiReset } from \"react-icons/bi\";\nimport { MdClose } from \"react-icons/md\";\nimport ShowError from \"../../components/ShowError\";\nimport snackContext from \"../../context/snackProvider\";\nimport { useCreateCategory } from \"../../query/category\";\nimport tableOptionsStyle from \"../../style/tableOptions\";\nimport { responseHandler } from \"../../utilities/response-handler\";\n\nconst CreateDrawer = ({ open, onClose }) => {\n  const snack = React.useContext(snackContext);\n  const {\n    register,\n    reset,\n    handleSubmit,\n    formState: { errors, isDirty },\n  } = useForm();\n\n  const { mutateAsync: postCategory, isLoading } = useCreateCategory();\n\n  const createCategory = async (data) => {\n    const res = await responseHandler(() => postCategory(data), [201]);\n    if (res.status) {\n      snack.createSnack(res.msg);\n      reset();\n      onClose();\n    } else {\n      snack.createSnack(res.msg, \"error\");\n    }\n  };\n\n  return (\n    <Drawer\n      open={open}\n      onClose={onClose}\n      anchor=\"right\"\n      PaperProps={{\n        sx: {\n          width: \"95vw\",\n          maxWidth: \"400px\",\n        },\n      }}\n    >\n      <form onSubmit={handleSubmit(createCategory)}>\n        <List disablePadding>\n          <ListItem>\n            <ListItemText\n              primary={\"Create Category\"}\n              secondary={\"Create Category for Products\"}\n            />\n            {isDirty && (\n              <IconButton\n                size={\"small\"}\n                color={\"black\"}\n                onClick={() => reset()}\n              >\n                <BiReset />\n              </IconButton>\n            )}\n            <IconButton size={\"small\"} onClick={onClose}>\n              <MdClose />\n            </IconButton>\n          </ListItem>\n          {isLoading ? (\n            <LinearProgress />\n          ) : (\n            <Divider\n              sx={{\n                mb: 1,\n              }}\n            />\n          )}\n          <ListItem\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"flex-start\",\n              rowGap: 1,\n            }}\n          >\n            Category Name *\n            <InputBase\n              sx={tableOptionsStyle}\n              placeholder={\"Enter Category Name\"}\n              {...register(\"titleEn\", {\n                required: true,\n              })}\n              fullWidth\n            />\n            <ShowError err={errors.titleEn} />\n          </ListItem>\n          {/* <ListItem\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"flex-start\",\n              rowGap: 1,\n            }}\n          >\n            Category Name [In Bengali]\n            <InputBase\n              sx={tableOptionsStyle}\n              placeholder={\"Enter Category Name [In Bengali]\"}\n              {...register(\"titleBn\")}\n              fullWidth\n            />\n            <ShowError err={errors.titleBn} />\n          </ListItem> */}\n          <ListItem\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"flex-start\",\n              rowGap: 1,\n            }}\n          >\n            Description *\n            <InputBase\n              sx={{ ...tableOptionsStyle, height: \"unset\", py: 1 }}\n              placeholder={\"Enter Description\"}\n              multiline\n              minRows={5}\n              // maxRows={6}\n              {...register(\"descriptionEn\", {\n                required: true,\n              })}\n              fullWidth\n            />\n            <ShowError err={errors.descriptionEn} />\n          </ListItem>\n          {/* <ListItem\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"flex-start\",\n              rowGap: 1,\n            }}\n          >\n            Description [In Bengali]\n            <InputBase\n              sx={{ ...tableOptionsStyle, height: \"unset\", py: 1 }}\n              placeholder={\"Enter Description [In Bengali]\"}\n              multiline\n              minRows={5}\n              maxRows={6}\n              {...register(\"descriptionBn\")}\n              fullWidth\n            />\n            <ShowError err={errors.descriptionBn} />\n          </ListItem> */}\n          <ListItem>\n            <Button\n              variant={\"contained\"}\n              type={\"submit\"}\n              disabled={isLoading}\n              fullWidth\n            >\n              Create\n            </Button>\n          </ListItem>\n        </List>\n      </form>\n    </Drawer>\n  );\n};\n\nexport default CreateDrawer;\n","import React from \"react\";\n\nimport {\n  Chip,\n  Container,\n  Grid,\n  IconButton,\n  InputBase,\n  MenuItem,\n  Paper,\n  Select,\n  Button,\n  Avatar,\n} from \"@mui/material\";\n\nimport DataTable from \"../../components/DataTable\";\nimport { useGetAllCategory, useToggleCategory } from \"../../query/category\";\nimport { getAttachment, rootURL } from \"../../service/instance\";\nimport ButtonSwitch from \"../../components/ButtonSwitch\";\nimport tableOptionsStyle from \"../../style/tableOptions\";\n\nimport { MdAdd } from \"react-icons/md\";\nimport CreateDrawer from \"./CreateDrawer\";\nimport { FaSlackHash } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\nimport { responseHandler } from \"../../utilities/response-handler\";\nimport snackContext from \"../../context/snackProvider\";\nimport StateViewer from \"../../components/StateViewer\";\nimport { useGetCatStats } from \"../../query/stats\";\nimport usePaginate from \"../../hooks/usePaginate\";\n\nconst Index = () => {\n  const snack = React.useContext(snackContext);\n  const {\n    limit,\n    setLimit,\n    page,\n    setPage,\n    search,\n    setSearch,\n    watch,\n    setFilterField,\n    getQueryParams,\n  } = usePaginate();\n  const { data, isLoading } = useGetAllCategory(getQueryParams());\n  const { data: catStats } = useGetCatStats();\n  const [openCreate, setOpenCreate] = React.useState(false);\n\n  const { mutateAsync: toggleState } = useToggleCategory();\n\n  const updateState = async (id) => {\n    const res = await responseHandler(() => toggleState(id));\n    if (res.status) snack.createSnack(res.msg);\n    else snack.createSnack(res.msg, \"error\");\n  };\n\n  const cols = [\n    {\n      headerName: \"\",\n      headerAlign: \"center\",\n      field: \"actions\",\n      align: \"center\",\n      width: 50,\n      sortable: false,\n      renderCell: (params) => (\n        <>\n          <IconButton\n            component={Link}\n            size={\"small\"}\n            color={\"primary\"}\n            to={`/cat/${params.row?._id}`}\n          >\n            <FaSlackHash />\n          </IconButton>\n        </>\n      ),\n    },\n    {\n      headerName: \"Icon\",\n      headerAlign: \"center\",\n      field: \"receiver_number\",\n      align: \"center\",\n      width: 80,\n      renderCell: (params) => (\n        <Avatar src={getAttachment(params.row.icon)} variant=\"square\" />\n      ),\n    },\n\n    {\n      headerName: \"Category Name\",\n      //   headerAlign: \"center\",\n      field: \"titleEn\",\n      minWidth: 120,\n      flex: 1,\n    },\n    {\n      headerName: \"Subcategory\",\n      headerAlign: \"center\",\n      field: \"totalSubcategories\",\n      Width: 120,\n      // flex: 1,\n      align: \"center\",\n      // renderCell: () => (\n      //   <>\n      //     <IconButton>\n      //       <IoMdEye />\n      //     </IconButton>\n      //   </>\n      // ),\n    },\n\n    {\n      headerName: \"Status\",\n      headerAlign: \"center\",\n      field: \"isActive\",\n      align: \"center\",\n      sortable: false,\n      renderCell: (params) => (\n        <ButtonSwitch\n          checked={params.row.isActive}\n          color={\"success\"}\n          onClick={() => updateState(params?.row?._id)}\n        />\n      ),\n    },\n    // {\n    //   headerName: \"Action\",\n    //   headerAlign: \"center\",\n    //   field: \"actions\",\n    //   align: \"center\",\n    //   width: 120,\n    //   renderCell: () => (\n    //     <>\n    //       <IconButton size={\"small\"}>\n    //         <FiEdit2 />\n    //       </IconButton>\n    //     </>\n    //   ),\n    // },\n  ];\n  return (\n    <>\n      <Container\n        sx={{\n          py: 2,\n        }}\n      >\n        <StateViewer\n          stateList={[\n            {\n              num: catStats?.data?.data?.total,\n              title: \"Total Products\",\n            },\n            {\n              num: catStats?.data?.data?.active,\n              title: \"Published\",\n            },\n            {\n              num: catStats?.data?.data?.blocked,\n              title: \"Unpublished\",\n            },\n          ]}\n        />\n        <Paper\n          elevation={0}\n          sx={{\n            p: 2,\n            border: \"1px solid #ccc\",\n            my: 2,\n          }}\n        >\n          <Grid\n            container\n            rowGap={1}\n            columnGap={1}\n            alignItems={\"center\"}\n            justifyContent={\"space-between\"}\n          >\n            <Grid item xs={12} md={8.8}>\n              <InputBase\n                placeholder=\"Search Category\"\n                sx={tableOptionsStyle}\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <Button\n                variant={\"contained\"}\n                color={\"primary\"}\n                size={\"large\"}\n                sx={{\n                  height: \"52px\",\n                }}\n                startIcon={<MdAdd />}\n                onClick={() => setOpenCreate(!openCreate)}\n                fullWidth\n              >\n                Add Category\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>{\" \"}\n        <DataTable\n          columns={cols}\n          rows={data?.data?.data || []}\n          isLoading={isLoading}\n          width={\"auto\"}\n          paginationMode={\"server\"}\n          rowCount={data?.data?.total || 0}\n          page={page}\n          onPageChange={setPage}\n          pageSize={limit}\n          onPageSizeChange={setLimit}\n        />\n        <CreateDrawer\n          open={openCreate}\n          onClose={() => setOpenCreate(!openCreate)}\n        />\n      </Container>\n    </>\n  );\n};\n\nexport default Index;\n","import { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport instance from \"../service/instance\";\n\nconst getAllCategory = (params) => {\n  return instance.get(`category`, {\n    params,\n  });\n};\n\nexport const useGetAllCategory = (params) => {\n  return useQuery([\"get-all-category\", params], () => getAllCategory(params), {\n    // refetchInterval: 20000,\n  });\n};\n\nconst getCategory = (id) => {\n  return instance.get(`category/${id}`);\n};\n\nexport const useGetCategory = (id) => {\n  return useQuery([\"get-category\", id], () => getCategory(id), {\n    // refetchInterval: 20000,\n    enabled: !!id,\n  });\n};\n\nconst createCategory = (data) => {\n  return instance.post(\"category\", data);\n};\n\nexport const useCreateCategory = () => {\n  const queryClient = useQueryClient();\n  return useMutation(createCategory, {\n    onSuccess: () => queryClient.invalidateQueries(\"get-all-category\"),\n  });\n};\n\nconst createSubcategory = (data) => {\n  return instance.post(\"subcategory\", data);\n};\n\nexport const useCreateSubcategory = () => {\n  const queryClient = useQueryClient();\n  return useMutation(createSubcategory, {\n    onSuccess: () => queryClient.invalidateQueries(\"get-sub-category-cat\"),\n  });\n};\n\nconst updateSubcategory = ({ id, data }) => {\n  return instance.patch(`subcategory/${id}`, data);\n};\n\nexport const useUpdateSubcategory = () => {\n  const queryClient = useQueryClient();\n  return useMutation(updateSubcategory, {\n    onSuccess: () => queryClient.invalidateQueries(\"get-sub-category-cat\"),\n  });\n};\n\nconst updateCategory = ({ id, data }) => {\n  return instance.patch(`category/${id}`, data);\n};\n\nexport const useUpdateCategory = () => {\n  const queryClient = useQueryClient();\n  return useMutation(updateCategory, {\n    onSuccess: () => {\n      queryClient.invalidateQueries(\"get-all-category\");\n      queryClient.invalidateQueries(\"get-category\");\n    },\n  });\n};\n\nconst getSubCategoryFromCatID = (category_id, params) => {\n  return instance.get(`subcategory`, {\n    params: {\n      ...params,\n      category: category_id,\n    },\n  });\n};\n\nexport const useGetSubCategoryFromCatID = (category_id, params) => {\n  return useQuery(\n    [\"get-sub-category-cat\", category_id, params],\n    () => getSubCategoryFromCatID(category_id, params),\n    {\n      // refetchInterval: 20000,\n      enabled: !!category_id && category_id !== \"null\",\n      retry: 0,\n    }\n  );\n};\n\nconst toggleCategory = (id) => {\n  return instance.put(`category/${id}`);\n};\n\nexport const useToggleCategory = () => {\n  const queryClient = useQueryClient();\n  return useMutation(toggleCategory, {\n    onSuccess: () => queryClient.invalidateQueries(\"get-all-category\"),\n  });\n};\n\nconst toggleSubcategory = (id) => {\n  return instance.put(`subcategory/${id}`);\n};\n\nexport const useToggleSubcategory = () => {\n  const queryClient = useQueryClient();\n  return useMutation(toggleSubcategory, {\n    onSuccess: () => queryClient.invalidateQueries(\"get-sub-category-cat\"),\n  });\n};\n\nconst getAllCategoryImages = (pid) => {\n  return instance.get(`category/${pid}/images`);\n};\n\nexport const useGetAllCategoryImages = (pid) => {\n  return useQuery(\n    [\"get-category-images\", pid],\n    () => getAllCategoryImages(pid),\n    {\n      // refetchInterval: 20000,\n      enabled: !!pid,\n    }\n  );\n};\n\nconst delCategoryImage = (id) => {\n  return instance.delete(`category/images/${id}`);\n};\n\nexport const useDeleteCategoryImage = () => {\n  const queryClient = useQueryClient();\n  return useMutation(delCategoryImage, {\n    onSuccess: () => queryClient.invalidateQueries(\"get-category-images\"),\n  });\n};\n\nconst postCategoryImage = ({ id, data }) => {\n  return instance.postForm(`category/${id}/images`, data);\n};\n\nexport const usePostCategoryImage = () => {\n  const queryClient = useQueryClient();\n  return useMutation(postCategoryImage, {\n    onSuccess: () => queryClient.invalidateQueries(\"get-category-images\"),\n  });\n};\n","import { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport instance from \"../service/instance\";\n\nconst getProductStats = () => {\n  return instance.get(`stats/product`);\n};\n\nexport const useGetProductStats = () => {\n  return useQuery([\"get-product-stats\"], () => getProductStats(), {\n    // refetchInterval: 20000,\n  });\n};\n\nconst getCustomerStats = () => {\n  return instance.get(`stats/customer`);\n};\n\nexport const useGetCustomerStats = () => {\n  return useQuery([\"get-customer-stats\"], () => getCustomerStats(), {\n    // refetchInterval: 20000,\n  });\n};\n\nconst getStoreStats = () => {\n  return instance.get(`stats/store`);\n};\n\nexport const useGetStoreStats = () => {\n  return useQuery([\"get-store-stats\"], () => getStoreStats(), {\n    // refetchInterval: 20000,\n  });\n};\n\nconst getOrderStats = () => {\n  return instance.get(`stats/order`);\n};\n\nexport const useGetOrderStats = () => {\n  return useQuery([\"get-orders-stats\"], () => getOrderStats(), {\n    // refetchInterval: 20000,\n  });\n};\n\nconst getCatStats = () => {\n  return instance.get(`stats/category`);\n};\n\nexport const useGetCatStats = () => {\n  return useQuery([\"get-category-stats\"], () => getCatStats(), {\n    // refetchInterval: 20000,\n  });\n};\n","const tableOptionsStyle = {\n  bgcolor: \"#f3f3f3\",\n  borderRadius: \"4px\",\n  px: \"10px\",\n  height: \"52px\",\n  outline: \"none\",\n  \"&, & *\": {\n    border: \"transparent !important\",\n    outline: \"none !important\",\n  },\n};\n\nexport default tableOptionsStyle;\n"],"names":["ButtonSwitch","styled","props","focusVisibleClassName","theme","width","height","padding","margin","transform","color","borderRadius","StyledGridOverlay","display","flexDirection","alignItems","justifyContent","fill","palette","mode","fillOpacity","CustomNoRowsOverlay","viewBox","focusable","fillRule","className","cx","cy","rx","ry","d","Box","sx","mt","columns","rows","isLoading","others","onCellClick","length","backgroundColor","fontWeight","fontSize","DataGrid","headerAlign","disableColumnMenu","disableColumnFilter","disableSelectionOnClick","rowsPerPageOptions","autoHeight","loading","components","NoRowsOverlay","outline","err","React","open","setOpen","in","severity","onClose","type","message","args","limit","defaultParams","page","search","filters","filter","params","setParams","setSearch","txt","setPage","newPage","setLimit","newLimit","watch","key","undefined","setFilterField","value","getQueryParams","JSON","parse","stringify","snack","snackContext","useForm","register","reset","handleSubmit","formState","errors","isDirty","useCreateCategory","postCategory","mutateAsync","createCategory","data","responseHandler","res","status","createSnack","msg","Drawer","anchor","PaperProps","maxWidth","onSubmit","List","disablePadding","ListItem","ListItemText","primary","secondary","IconButton","size","onClick","LinearProgress","Divider","mb","rowGap","InputBase","tableOptionsStyle","placeholder","required","fullWidth","ShowError","titleEn","py","multiline","minRows","descriptionEn","Button","variant","disabled","usePaginate","useGetAllCategory","catStats","useGetCatStats","openCreate","setOpenCreate","toggleState","useToggleCategory","updateState","id","cols","headerName","field","align","sortable","renderCell","component","Link","to","row","_id","Avatar","src","getAttachment","icon","minWidth","flex","Width","checked","isActive","Container","StateViewer","stateList","num","total","title","active","blocked","Paper","elevation","p","border","my","Grid","container","columnGap","item","xs","md","onChange","e","target","startIcon","DataTable","paginationMode","rowCount","onPageChange","pageSize","onPageSizeChange","useQuery","instance","getAllCategory","useGetCategory","getCategory","enabled","queryClient","useQueryClient","useMutation","onSuccess","invalidateQueries","createSubcategory","useCreateSubcategory","updateSubcategory","useUpdateSubcategory","updateCategory","useUpdateCategory","useGetSubCategoryFromCatID","category_id","category","getSubCategoryFromCatID","retry","toggleCategory","toggleSubcategory","useToggleSubcategory","useGetAllCategoryImages","pid","getAllCategoryImages","delCategoryImage","useDeleteCategoryImage","postCategoryImage","usePostCategoryImage","useGetProductStats","useGetCustomerStats","useGetStoreStats","useGetOrderStats","bgcolor","px"],"sourceRoot":""}