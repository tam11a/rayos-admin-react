{"version":3,"file":"static/js/711.aeebfd56.chunk.js","mappings":"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","sources":["../node_modules/@iconify/react/dist/iconify.mjs"],"sourcesContent":["import React from 'react';\n\nconst matchIconName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\nconst stringToIcon = (value, validate, allowSimpleName, provider = \"\") => {\n  const colonSeparated = value.split(\":\");\n  if (value.slice(0, 1) === \"@\") {\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n      return null;\n    }\n    provider = colonSeparated.shift().slice(1);\n  }\n  if (colonSeparated.length > 3 || !colonSeparated.length) {\n    return null;\n  }\n  if (colonSeparated.length > 1) {\n    const name2 = colonSeparated.pop();\n    const prefix = colonSeparated.pop();\n    const result = {\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n      prefix,\n      name: name2\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  const name = colonSeparated[0];\n  const dashSeparated = name.split(\"-\");\n  if (dashSeparated.length > 1) {\n    const result = {\n      provider,\n      prefix: dashSeparated.shift(),\n      name: dashSeparated.join(\"-\")\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  if (allowSimpleName && provider === \"\") {\n    const result = {\n      provider,\n      prefix: \"\",\n      name\n    };\n    return validate && !validateIconName(result, allowSimpleName) ? null : result;\n  }\n  return null;\n};\nconst validateIconName = (icon, allowSimpleName) => {\n  if (!icon) {\n    return false;\n  }\n  return !!((icon.provider === \"\" || icon.provider.match(matchIconName)) && (allowSimpleName && icon.prefix === \"\" || icon.prefix.match(matchIconName)) && icon.name.match(matchIconName));\n};\n\nconst defaultIconDimensions = Object.freeze(\n  {\n    left: 0,\n    top: 0,\n    width: 16,\n    height: 16\n  }\n);\nconst defaultIconTransformations = Object.freeze({\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\nconst defaultIconProps = Object.freeze({\n  ...defaultIconDimensions,\n  ...defaultIconTransformations\n});\nconst defaultExtendedIconProps = Object.freeze({\n  ...defaultIconProps,\n  body: \"\",\n  hidden: false\n});\n\nfunction mergeIconTransformations(obj1, obj2) {\n  const result = {};\n  if (!obj1.hFlip !== !obj2.hFlip) {\n    result.hFlip = true;\n  }\n  if (!obj1.vFlip !== !obj2.vFlip) {\n    result.vFlip = true;\n  }\n  const rotate = ((obj1.rotate || 0) + (obj2.rotate || 0)) % 4;\n  if (rotate) {\n    result.rotate = rotate;\n  }\n  return result;\n}\n\nfunction mergeIconData(parent, child) {\n  const result = mergeIconTransformations(parent, child);\n  for (const key in defaultExtendedIconProps) {\n    if (key in defaultIconTransformations) {\n      if (key in parent && !(key in result)) {\n        result[key] = defaultIconTransformations[key];\n      }\n    } else if (key in child) {\n      result[key] = child[key];\n    } else if (key in parent) {\n      result[key] = parent[key];\n    }\n  }\n  return result;\n}\n\nfunction getIconsTree(data, names) {\n  const icons = data.icons;\n  const aliases = data.aliases || {};\n  const resolved = /* @__PURE__ */ Object.create(null);\n  function resolve(name) {\n    if (icons[name]) {\n      return resolved[name] = [];\n    }\n    if (!(name in resolved)) {\n      resolved[name] = null;\n      const parent = aliases[name] && aliases[name].parent;\n      const value = parent && resolve(parent);\n      if (value) {\n        resolved[name] = [parent].concat(value);\n      }\n    }\n    return resolved[name];\n  }\n  (names || Object.keys(icons).concat(Object.keys(aliases))).forEach(resolve);\n  return resolved;\n}\n\nfunction internalGetIconData(data, name, tree) {\n  const icons = data.icons;\n  const aliases = data.aliases || {};\n  let currentProps = {};\n  function parse(name2) {\n    currentProps = mergeIconData(\n      icons[name2] || aliases[name2],\n      currentProps\n    );\n  }\n  parse(name);\n  tree.forEach(parse);\n  return mergeIconData(data, currentProps);\n}\n\nfunction parseIconSet(data, callback) {\n  const names = [];\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\n    return names;\n  }\n  if (data.not_found instanceof Array) {\n    data.not_found.forEach((name) => {\n      callback(name, null);\n      names.push(name);\n    });\n  }\n  const tree = getIconsTree(data);\n  for (const name in tree) {\n    const item = tree[name];\n    if (item) {\n      callback(name, internalGetIconData(data, name, item));\n      names.push(name);\n    }\n  }\n  return names;\n}\n\nconst optionalPropertyDefaults = {\n  provider: \"\",\n  aliases: {},\n  not_found: {},\n  ...defaultIconDimensions\n};\nfunction checkOptionalProps(item, defaults) {\n  for (const prop in defaults) {\n    if (prop in item && typeof item[prop] !== typeof defaults[prop]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction quicklyValidateIconSet(obj) {\n  if (typeof obj !== \"object\" || obj === null) {\n    return null;\n  }\n  const data = obj;\n  if (typeof data.prefix !== \"string\" || !obj.icons || typeof obj.icons !== \"object\") {\n    return null;\n  }\n  if (!checkOptionalProps(obj, optionalPropertyDefaults)) {\n    return null;\n  }\n  const icons = data.icons;\n  for (const name in icons) {\n    const icon = icons[name];\n    if (!name.match(matchIconName) || typeof icon.body !== \"string\" || !checkOptionalProps(\n      icon,\n      defaultExtendedIconProps\n    )) {\n      return null;\n    }\n  }\n  const aliases = data.aliases || {};\n  for (const name in aliases) {\n    const icon = aliases[name];\n    const parent = icon.parent;\n    if (!name.match(matchIconName) || typeof parent !== \"string\" || !icons[parent] && !aliases[parent] || !checkOptionalProps(\n      icon,\n      defaultExtendedIconProps\n    )) {\n      return null;\n    }\n  }\n  return data;\n}\n\nconst dataStorage = /* @__PURE__ */ Object.create(null);\nfunction newStorage(provider, prefix) {\n  return {\n    provider,\n    prefix,\n    icons: /* @__PURE__ */ Object.create(null),\n    missing: /* @__PURE__ */ new Set()\n  };\n}\nfunction getStorage(provider, prefix) {\n  const providerStorage = dataStorage[provider] || (dataStorage[provider] = /* @__PURE__ */ Object.create(null));\n  return providerStorage[prefix] || (providerStorage[prefix] = newStorage(provider, prefix));\n}\nfunction addIconSet(storage, data) {\n  if (!quicklyValidateIconSet(data)) {\n    return [];\n  }\n  return parseIconSet(data, (name, icon) => {\n    if (icon) {\n      storage.icons[name] = icon;\n    } else {\n      storage.missing.add(name);\n    }\n  });\n}\nfunction addIconToStorage(storage, name, icon) {\n  try {\n    if (typeof icon.body === \"string\") {\n      storage.icons[name] = { ...icon };\n      return true;\n    }\n  } catch (err) {\n  }\n  return false;\n}\nfunction listIcons(provider, prefix) {\n  let allIcons = [];\n  const providers = typeof provider === \"string\" ? [provider] : Object.keys(dataStorage);\n  providers.forEach((provider2) => {\n    const prefixes = typeof provider2 === \"string\" && typeof prefix === \"string\" ? [prefix] : Object.keys(dataStorage[provider2] || {});\n    prefixes.forEach((prefix2) => {\n      const storage = getStorage(provider2, prefix2);\n      allIcons = allIcons.concat(\n        Object.keys(storage.icons).map(\n          (name) => (provider2 !== \"\" ? \"@\" + provider2 + \":\" : \"\") + prefix2 + \":\" + name\n        )\n      );\n    });\n  });\n  return allIcons;\n}\n\nlet simpleNames = false;\nfunction allowSimpleNames(allow) {\n  if (typeof allow === \"boolean\") {\n    simpleNames = allow;\n  }\n  return simpleNames;\n}\nfunction getIconData(name) {\n  const icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\n  if (icon) {\n    const storage = getStorage(icon.provider, icon.prefix);\n    const iconName = icon.name;\n    return storage.icons[iconName] || (storage.missing.has(iconName) ? null : void 0);\n  }\n}\nfunction addIcon(name, data) {\n  const icon = stringToIcon(name, true, simpleNames);\n  if (!icon) {\n    return false;\n  }\n  const storage = getStorage(icon.provider, icon.prefix);\n  return addIconToStorage(storage, icon.name, data);\n}\nfunction addCollection(data, provider) {\n  if (typeof data !== \"object\") {\n    return false;\n  }\n  if (typeof provider !== \"string\") {\n    provider = data.provider || \"\";\n  }\n  if (simpleNames && !provider && !data.prefix) {\n    let added = false;\n    if (quicklyValidateIconSet(data)) {\n      data.prefix = \"\";\n      parseIconSet(data, (name, icon) => {\n        if (icon && addIcon(name, icon)) {\n          added = true;\n        }\n      });\n    }\n    return added;\n  }\n  const prefix = data.prefix;\n  if (!validateIconName({\n    provider,\n    prefix,\n    name: \"a\"\n  })) {\n    return false;\n  }\n  const storage = getStorage(provider, prefix);\n  return !!addIconSet(storage, data);\n}\nfunction iconExists(name) {\n  return !!getIconData(name);\n}\nfunction getIcon(name) {\n  const result = getIconData(name);\n  return result ? {\n    ...defaultIconProps,\n    ...result\n  } : null;\n}\n\nconst defaultIconSizeCustomisations = Object.freeze({\n  width: null,\n  height: null\n});\nconst defaultIconCustomisations = Object.freeze({\n  ...defaultIconSizeCustomisations,\n  ...defaultIconTransformations\n});\n\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n  precision = precision || 100;\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n  if (typeof size !== \"string\") {\n    return size;\n  }\n  const oldParts = size.split(unitsSplit);\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n    code = oldParts.shift();\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n    isNumber = !isNumber;\n  }\n}\n\nfunction iconToSVG(icon, customisations) {\n  const fullIcon = {\n    ...defaultIconProps,\n    ...icon\n  };\n  const fullCustomisations = {\n    ...defaultIconCustomisations,\n    ...customisations\n  };\n  const box = {\n    left: fullIcon.left,\n    top: fullIcon.top,\n    width: fullIcon.width,\n    height: fullIcon.height\n  };\n  let body = fullIcon.body;\n  [fullIcon, fullCustomisations].forEach((props) => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\n          \"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\"\n        );\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\n        \"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\"\n      );\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n    let tempValue;\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n    rotation = rotation % 4;\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\n          \"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n        );\n        break;\n      case 2:\n        transformations.unshift(\n          \"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\"\n        );\n        break;\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\n          \"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n        );\n        break;\n    }\n    if (rotation % 2 === 1) {\n      if (box.left !== box.top) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n    if (transformations.length) {\n      body = '<g transform=\"' + transformations.join(\" \") + '\">' + body + \"</g>\";\n    }\n  });\n  const customisationsWidth = fullCustomisations.width;\n  const customisationsHeight = fullCustomisations.height;\n  const boxWidth = box.width;\n  const boxHeight = box.height;\n  let width;\n  let height;\n  if (customisationsWidth === null) {\n    height = customisationsHeight === null ? \"1em\" : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n    width = calculateSize(height, boxWidth / boxHeight);\n  } else {\n    width = customisationsWidth === \"auto\" ? boxWidth : customisationsWidth;\n    height = customisationsHeight === null ? calculateSize(width, boxHeight / boxWidth) : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n  }\n  const result = {\n    attributes: {\n      width: width.toString(),\n      height: height.toString(),\n      viewBox: box.left.toString() + \" \" + box.top.toString() + \" \" + boxWidth.toString() + \" \" + boxHeight.toString()\n    },\n    body\n  };\n  return result;\n}\n\nconst regex = /\\sid=\"(\\S+)\"/g;\nconst randomPrefix = \"IconifyId\" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);\nlet counter = 0;\nfunction replaceIDs(body, prefix = randomPrefix) {\n  const ids = [];\n  let match;\n  while (match = regex.exec(body)) {\n    ids.push(match[1]);\n  }\n  if (!ids.length) {\n    return body;\n  }\n  ids.forEach((id) => {\n    const newID = typeof prefix === \"function\" ? prefix(id) : prefix + (counter++).toString();\n    const escapedID = id.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    body = body.replace(\n      new RegExp('([#;\"])(' + escapedID + ')([\")]|\\\\.[a-z])', \"g\"),\n      \"$1\" + newID + \"$3\"\n    );\n  });\n  return body;\n}\n\nconst storage = /* @__PURE__ */ Object.create(null);\nfunction setAPIModule(provider, item) {\n  storage[provider] = item;\n}\nfunction getAPIModule(provider) {\n  return storage[provider] || storage[\"\"];\n}\n\nfunction createAPIConfig(source) {\n  let resources;\n  if (typeof source.resources === \"string\") {\n    resources = [source.resources];\n  } else {\n    resources = source.resources;\n    if (!(resources instanceof Array) || !resources.length) {\n      return null;\n    }\n  }\n  const result = {\n    resources,\n    path: source.path || \"/\",\n    maxURL: source.maxURL || 500,\n    rotate: source.rotate || 750,\n    timeout: source.timeout || 5e3,\n    random: source.random === true,\n    index: source.index || 0,\n    dataAfterTimeout: source.dataAfterTimeout !== false\n  };\n  return result;\n}\nconst configStorage = /* @__PURE__ */ Object.create(null);\nconst fallBackAPISources = [\n  \"https://api.simplesvg.com\",\n  \"https://api.unisvg.com\"\n];\nconst fallBackAPI = [];\nwhile (fallBackAPISources.length > 0) {\n  if (fallBackAPISources.length === 1) {\n    fallBackAPI.push(fallBackAPISources.shift());\n  } else {\n    if (Math.random() > 0.5) {\n      fallBackAPI.push(fallBackAPISources.shift());\n    } else {\n      fallBackAPI.push(fallBackAPISources.pop());\n    }\n  }\n}\nconfigStorage[\"\"] = createAPIConfig({\n  resources: [\"https://api.iconify.design\"].concat(fallBackAPI)\n});\nfunction addAPIProvider(provider, customConfig) {\n  const config = createAPIConfig(customConfig);\n  if (config === null) {\n    return false;\n  }\n  configStorage[provider] = config;\n  return true;\n}\nfunction getAPIConfig(provider) {\n  return configStorage[provider];\n}\nfunction listAPIProviders() {\n  return Object.keys(configStorage);\n}\n\nconst detectFetch = () => {\n  let callback;\n  try {\n    callback = fetch;\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {\n  }\n};\nlet fetchModule = detectFetch();\nfunction setFetch(fetch2) {\n  fetchModule = fetch2;\n}\nfunction getFetch() {\n  return fetchModule;\n}\nfunction calculateMaxLength(provider, prefix) {\n  const config = getAPIConfig(provider);\n  if (!config) {\n    return 0;\n  }\n  let result;\n  if (!config.maxURL) {\n    result = 0;\n  } else {\n    let maxHostLength = 0;\n    config.resources.forEach((item) => {\n      const host = item;\n      maxHostLength = Math.max(maxHostLength, host.length);\n    });\n    const url = prefix + \".json?icons=\";\n    result = config.maxURL - maxHostLength - config.path.length - url.length;\n  }\n  return result;\n}\nfunction shouldAbort(status) {\n  return status === 404;\n}\nconst prepare = (provider, prefix, icons) => {\n  const results = [];\n  const maxLength = calculateMaxLength(provider, prefix);\n  const type = \"icons\";\n  let item = {\n    type,\n    provider,\n    prefix,\n    icons: []\n  };\n  let length = 0;\n  icons.forEach((name, index) => {\n    length += name.length + 1;\n    if (length >= maxLength && index > 0) {\n      results.push(item);\n      item = {\n        type,\n        provider,\n        prefix,\n        icons: []\n      };\n      length = name.length;\n    }\n    item.icons.push(name);\n  });\n  results.push(item);\n  return results;\n};\nfunction getPath(provider) {\n  if (typeof provider === \"string\") {\n    const config = getAPIConfig(provider);\n    if (config) {\n      return config.path;\n    }\n  }\n  return \"/\";\n}\nconst send = (host, params, callback) => {\n  if (!fetchModule) {\n    callback(\"abort\", 424);\n    return;\n  }\n  let path = getPath(params.provider);\n  switch (params.type) {\n    case \"icons\": {\n      const prefix = params.prefix;\n      const icons = params.icons;\n      const iconsList = icons.join(\",\");\n      const urlParams = new URLSearchParams({\n        icons: iconsList\n      });\n      path += prefix + \".json?\" + urlParams.toString();\n      break;\n    }\n    case \"custom\": {\n      const uri = params.uri;\n      path += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\n      break;\n    }\n    default:\n      callback(\"abort\", 400);\n      return;\n  }\n  let defaultError = 503;\n  fetchModule(host + path).then((response) => {\n    const status = response.status;\n    if (status !== 200) {\n      setTimeout(() => {\n        callback(shouldAbort(status) ? \"abort\" : \"next\", status);\n      });\n      return;\n    }\n    defaultError = 501;\n    return response.json();\n  }).then((data) => {\n    if (typeof data !== \"object\" || data === null) {\n      setTimeout(() => {\n        callback(\"next\", defaultError);\n      });\n      return;\n    }\n    setTimeout(() => {\n      callback(\"success\", data);\n    });\n  }).catch(() => {\n    callback(\"next\", defaultError);\n  });\n};\nconst fetchAPIModule = {\n  prepare,\n  send\n};\n\nfunction sortIcons(icons) {\n  const result = {\n    loaded: [],\n    missing: [],\n    pending: []\n  };\n  const storage = /* @__PURE__ */ Object.create(null);\n  icons.sort((a, b) => {\n    if (a.provider !== b.provider) {\n      return a.provider.localeCompare(b.provider);\n    }\n    if (a.prefix !== b.prefix) {\n      return a.prefix.localeCompare(b.prefix);\n    }\n    return a.name.localeCompare(b.name);\n  });\n  let lastIcon = {\n    provider: \"\",\n    prefix: \"\",\n    name: \"\"\n  };\n  icons.forEach((icon) => {\n    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {\n      return;\n    }\n    lastIcon = icon;\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    const providerStorage = storage[provider] || (storage[provider] = /* @__PURE__ */ Object.create(null));\n    const localStorage = providerStorage[prefix] || (providerStorage[prefix] = getStorage(provider, prefix));\n    let list;\n    if (name in localStorage.icons) {\n      list = result.loaded;\n    } else if (prefix === \"\" || localStorage.missing.has(name)) {\n      list = result.missing;\n    } else {\n      list = result.pending;\n    }\n    const item = {\n      provider,\n      prefix,\n      name\n    };\n    list.push(item);\n  });\n  return result;\n}\n\nfunction removeCallback(storages, id) {\n  storages.forEach((storage) => {\n    const items = storage.loaderCallbacks;\n    if (items) {\n      storage.loaderCallbacks = items.filter((row) => row.id !== id);\n    }\n  });\n}\nfunction updateCallbacks(storage) {\n  if (!storage.pendingCallbacksFlag) {\n    storage.pendingCallbacksFlag = true;\n    setTimeout(() => {\n      storage.pendingCallbacksFlag = false;\n      const items = storage.loaderCallbacks ? storage.loaderCallbacks.slice(0) : [];\n      if (!items.length) {\n        return;\n      }\n      let hasPending = false;\n      const provider = storage.provider;\n      const prefix = storage.prefix;\n      items.forEach((item) => {\n        const icons = item.icons;\n        const oldLength = icons.pending.length;\n        icons.pending = icons.pending.filter((icon) => {\n          if (icon.prefix !== prefix) {\n            return true;\n          }\n          const name = icon.name;\n          if (storage.icons[name]) {\n            icons.loaded.push({\n              provider,\n              prefix,\n              name\n            });\n          } else if (storage.missing.has(name)) {\n            icons.missing.push({\n              provider,\n              prefix,\n              name\n            });\n          } else {\n            hasPending = true;\n            return true;\n          }\n          return false;\n        });\n        if (icons.pending.length !== oldLength) {\n          if (!hasPending) {\n            removeCallback([storage], item.id);\n          }\n          item.callback(\n            icons.loaded.slice(0),\n            icons.missing.slice(0),\n            icons.pending.slice(0),\n            item.abort\n          );\n        }\n      });\n    });\n  }\n}\nlet idCounter = 0;\nfunction storeCallback(callback, icons, pendingSources) {\n  const id = idCounter++;\n  const abort = removeCallback.bind(null, pendingSources, id);\n  if (!icons.pending.length) {\n    return abort;\n  }\n  const item = {\n    id,\n    icons,\n    callback,\n    abort\n  };\n  pendingSources.forEach((storage) => {\n    (storage.loaderCallbacks || (storage.loaderCallbacks = [])).push(item);\n  });\n  return abort;\n}\n\nfunction listToIcons(list, validate = true, simpleNames = false) {\n  const result = [];\n  list.forEach((item) => {\n    const icon = typeof item === \"string\" ? stringToIcon(item, validate, simpleNames) : item;\n    if (icon) {\n      result.push(icon);\n    }\n  });\n  return result;\n}\n\n// src/config.ts\nvar defaultConfig = {\n  resources: [],\n  index: 0,\n  timeout: 2e3,\n  rotate: 750,\n  random: false,\n  dataAfterTimeout: false\n};\n\n// src/query.ts\nfunction sendQuery(config, payload, query, done) {\n  const resourcesCount = config.resources.length;\n  const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\n  let resources;\n  if (config.random) {\n    let list = config.resources.slice(0);\n    resources = [];\n    while (list.length > 1) {\n      const nextIndex = Math.floor(Math.random() * list.length);\n      resources.push(list[nextIndex]);\n      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n    }\n    resources = resources.concat(list);\n  } else {\n    resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n  }\n  const startTime = Date.now();\n  let status = \"pending\";\n  let queriesSent = 0;\n  let lastError;\n  let timer = null;\n  let queue = [];\n  let doneCallbacks = [];\n  if (typeof done === \"function\") {\n    doneCallbacks.push(done);\n  }\n  function resetTimer() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function abort() {\n    if (status === \"pending\") {\n      status = \"aborted\";\n    }\n    resetTimer();\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function subscribe(callback, overwrite) {\n    if (overwrite) {\n      doneCallbacks = [];\n    }\n    if (typeof callback === \"function\") {\n      doneCallbacks.push(callback);\n    }\n  }\n  function getQueryStatus() {\n    return {\n      startTime,\n      payload,\n      status,\n      queriesSent,\n      queriesPending: queue.length,\n      subscribe,\n      abort\n    };\n  }\n  function failQuery() {\n    status = \"failed\";\n    doneCallbacks.forEach((callback) => {\n      callback(void 0, lastError);\n    });\n  }\n  function clearQueue() {\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function moduleResponse(item, response, data) {\n    const isError = response !== \"success\";\n    queue = queue.filter((queued) => queued !== item);\n    switch (status) {\n      case \"pending\":\n        break;\n      case \"failed\":\n        if (isError || !config.dataAfterTimeout) {\n          return;\n        }\n        break;\n      default:\n        return;\n    }\n    if (response === \"abort\") {\n      lastError = data;\n      failQuery();\n      return;\n    }\n    if (isError) {\n      lastError = data;\n      if (!queue.length) {\n        if (!resources.length) {\n          failQuery();\n        } else {\n          execNext();\n        }\n      }\n      return;\n    }\n    resetTimer();\n    clearQueue();\n    if (!config.random) {\n      const index = config.resources.indexOf(item.resource);\n      if (index !== -1 && index !== config.index) {\n        config.index = index;\n      }\n    }\n    status = \"completed\";\n    doneCallbacks.forEach((callback) => {\n      callback(data);\n    });\n  }\n  function execNext() {\n    if (status !== \"pending\") {\n      return;\n    }\n    resetTimer();\n    const resource = resources.shift();\n    if (resource === void 0) {\n      if (queue.length) {\n        timer = setTimeout(() => {\n          resetTimer();\n          if (status === \"pending\") {\n            clearQueue();\n            failQuery();\n          }\n        }, config.timeout);\n        return;\n      }\n      failQuery();\n      return;\n    }\n    const item = {\n      status: \"pending\",\n      resource,\n      callback: (status2, data) => {\n        moduleResponse(item, status2, data);\n      }\n    };\n    queue.push(item);\n    queriesSent++;\n    timer = setTimeout(execNext, config.rotate);\n    query(resource, payload, item.callback);\n  }\n  setTimeout(execNext);\n  return getQueryStatus;\n}\n\n// src/index.ts\nfunction initRedundancy(cfg) {\n  const config = {\n    ...defaultConfig,\n    ...cfg\n  };\n  let queries = [];\n  function cleanup() {\n    queries = queries.filter((item) => item().status === \"pending\");\n  }\n  function query(payload, queryCallback, doneCallback) {\n    const query2 = sendQuery(\n      config,\n      payload,\n      queryCallback,\n      (data, error) => {\n        cleanup();\n        if (doneCallback) {\n          doneCallback(data, error);\n        }\n      }\n    );\n    queries.push(query2);\n    return query2;\n  }\n  function find(callback) {\n    return queries.find((value) => {\n      return callback(value);\n    }) || null;\n  }\n  const instance = {\n    query,\n    find,\n    setIndex: (index) => {\n      config.index = index;\n    },\n    getIndex: () => config.index,\n    cleanup\n  };\n  return instance;\n}\n\nfunction emptyCallback$1() {\n}\nconst redundancyCache = /* @__PURE__ */ Object.create(null);\nfunction getRedundancyCache(provider) {\n  if (!redundancyCache[provider]) {\n    const config = getAPIConfig(provider);\n    if (!config) {\n      return;\n    }\n    const redundancy = initRedundancy(config);\n    const cachedReundancy = {\n      config,\n      redundancy\n    };\n    redundancyCache[provider] = cachedReundancy;\n  }\n  return redundancyCache[provider];\n}\nfunction sendAPIQuery(target, query, callback) {\n  let redundancy;\n  let send;\n  if (typeof target === \"string\") {\n    const api = getAPIModule(target);\n    if (!api) {\n      callback(void 0, 424);\n      return emptyCallback$1;\n    }\n    send = api.send;\n    const cached = getRedundancyCache(target);\n    if (cached) {\n      redundancy = cached.redundancy;\n    }\n  } else {\n    const config = createAPIConfig(target);\n    if (config) {\n      redundancy = initRedundancy(config);\n      const moduleKey = target.resources ? target.resources[0] : \"\";\n      const api = getAPIModule(moduleKey);\n      if (api) {\n        send = api.send;\n      }\n    }\n  }\n  if (!redundancy || !send) {\n    callback(void 0, 424);\n    return emptyCallback$1;\n  }\n  return redundancy.query(query, send, callback)().abort;\n}\n\nconst browserCacheVersion = \"iconify2\";\nconst browserCachePrefix = \"iconify\";\nconst browserCacheCountKey = browserCachePrefix + \"-count\";\nconst browserCacheVersionKey = browserCachePrefix + \"-version\";\nconst browserStorageHour = 36e5;\nconst browserStorageCacheExpiration = 168;\n\nfunction getStoredItem(func, key) {\n  try {\n    return func.getItem(key);\n  } catch (err) {\n  }\n}\nfunction setStoredItem(func, key, value) {\n  try {\n    func.setItem(key, value);\n    return true;\n  } catch (err) {\n  }\n}\nfunction removeStoredItem(func, key) {\n  try {\n    func.removeItem(key);\n  } catch (err) {\n  }\n}\n\nfunction setBrowserStorageItemsCount(storage, value) {\n  return setStoredItem(storage, browserCacheCountKey, value.toString());\n}\nfunction getBrowserStorageItemsCount(storage) {\n  return parseInt(getStoredItem(storage, browserCacheCountKey)) || 0;\n}\n\nconst browserStorageConfig = {\n  local: true,\n  session: true\n};\nconst browserStorageEmptyItems = {\n  local: /* @__PURE__ */ new Set(),\n  session: /* @__PURE__ */ new Set()\n};\nlet browserStorageStatus = false;\nfunction setBrowserStorageStatus(status) {\n  browserStorageStatus = status;\n}\n\nlet _window = typeof window === \"undefined\" ? {} : window;\nfunction getBrowserStorage(key) {\n  const attr = key + \"Storage\";\n  try {\n    if (_window && _window[attr] && typeof _window[attr].length === \"number\") {\n      return _window[attr];\n    }\n  } catch (err) {\n  }\n  browserStorageConfig[key] = false;\n}\n\nfunction iterateBrowserStorage(key, callback) {\n  const func = getBrowserStorage(key);\n  if (!func) {\n    return;\n  }\n  const version = getStoredItem(func, browserCacheVersionKey);\n  if (version !== browserCacheVersion) {\n    if (version) {\n      const total2 = getBrowserStorageItemsCount(func);\n      for (let i = 0; i < total2; i++) {\n        removeStoredItem(func, browserCachePrefix + i.toString());\n      }\n    }\n    setStoredItem(func, browserCacheVersionKey, browserCacheVersion);\n    setBrowserStorageItemsCount(func, 0);\n    return;\n  }\n  const minTime = Math.floor(Date.now() / browserStorageHour) - browserStorageCacheExpiration;\n  const parseItem = (index) => {\n    const name = browserCachePrefix + index.toString();\n    const item = getStoredItem(func, name);\n    if (typeof item !== \"string\") {\n      return;\n    }\n    try {\n      const data = JSON.parse(item);\n      if (typeof data === \"object\" && typeof data.cached === \"number\" && data.cached > minTime && typeof data.provider === \"string\" && typeof data.data === \"object\" && typeof data.data.prefix === \"string\" && callback(data, index)) {\n        return true;\n      }\n    } catch (err) {\n    }\n    removeStoredItem(func, name);\n  };\n  let total = getBrowserStorageItemsCount(func);\n  for (let i = total - 1; i >= 0; i--) {\n    if (!parseItem(i)) {\n      if (i === total - 1) {\n        total--;\n        setBrowserStorageItemsCount(func, total);\n      } else {\n        browserStorageEmptyItems[key].add(i);\n      }\n    }\n  }\n}\n\nfunction initBrowserStorage() {\n  if (browserStorageStatus) {\n    return;\n  }\n  setBrowserStorageStatus(true);\n  for (const key in browserStorageConfig) {\n    iterateBrowserStorage(key, (item) => {\n      const iconSet = item.data;\n      const provider = item.provider;\n      const prefix = iconSet.prefix;\n      const storage = getStorage(\n        provider,\n        prefix\n      );\n      if (!addIconSet(storage, iconSet).length) {\n        return false;\n      }\n      const lastModified = iconSet.lastModified || -1;\n      storage.lastModifiedCached = storage.lastModifiedCached ? Math.min(storage.lastModifiedCached, lastModified) : lastModified;\n      return true;\n    });\n  }\n}\n\nfunction updateLastModified(storage, lastModified) {\n  const lastValue = storage.lastModifiedCached;\n  if (lastValue && lastValue >= lastModified) {\n    return lastValue === lastModified;\n  }\n  storage.lastModifiedCached = lastModified;\n  if (lastValue) {\n    for (const key in browserStorageConfig) {\n      iterateBrowserStorage(key, (item) => {\n        const iconSet = item.data;\n        return item.provider !== storage.provider || iconSet.prefix !== storage.prefix || iconSet.lastModified === lastModified;\n      });\n    }\n  }\n  return true;\n}\nfunction storeInBrowserStorage(storage, data) {\n  if (!browserStorageStatus) {\n    initBrowserStorage();\n  }\n  function store(key) {\n    let func;\n    if (!browserStorageConfig[key] || !(func = getBrowserStorage(key))) {\n      return;\n    }\n    const set = browserStorageEmptyItems[key];\n    let index;\n    if (set.size) {\n      set.delete(index = Array.from(set).shift());\n    } else {\n      index = getBrowserStorageItemsCount(func);\n      if (!setBrowserStorageItemsCount(func, index + 1)) {\n        return;\n      }\n    }\n    const item = {\n      cached: Math.floor(Date.now() / browserStorageHour),\n      provider: storage.provider,\n      data\n    };\n    return setStoredItem(\n      func,\n      browserCachePrefix + index.toString(),\n      JSON.stringify(item)\n    );\n  }\n  if (data.lastModified && !updateLastModified(storage, data.lastModified)) {\n    return;\n  }\n  if (!Object.keys(data.icons).length) {\n    return;\n  }\n  if (data.not_found) {\n    data = Object.assign({}, data);\n    delete data.not_found;\n  }\n  if (!store(\"local\")) {\n    store(\"session\");\n  }\n}\n\nfunction emptyCallback() {\n}\nfunction loadedNewIcons(storage) {\n  if (!storage.iconsLoaderFlag) {\n    storage.iconsLoaderFlag = true;\n    setTimeout(() => {\n      storage.iconsLoaderFlag = false;\n      updateCallbacks(storage);\n    });\n  }\n}\nfunction loadNewIcons(storage, icons) {\n  if (!storage.iconsToLoad) {\n    storage.iconsToLoad = icons;\n  } else {\n    storage.iconsToLoad = storage.iconsToLoad.concat(icons).sort();\n  }\n  if (!storage.iconsQueueFlag) {\n    storage.iconsQueueFlag = true;\n    setTimeout(() => {\n      storage.iconsQueueFlag = false;\n      const { provider, prefix } = storage;\n      const icons2 = storage.iconsToLoad;\n      delete storage.iconsToLoad;\n      let api;\n      if (!icons2 || !(api = getAPIModule(provider))) {\n        return;\n      }\n      const params = api.prepare(provider, prefix, icons2);\n      params.forEach((item) => {\n        sendAPIQuery(provider, item, (data, error) => {\n          if (typeof data !== \"object\") {\n            if (error !== 404) {\n              return;\n            }\n            item.icons.forEach((name) => {\n              storage.missing.add(name);\n            });\n          } else {\n            try {\n              const parsed = addIconSet(\n                storage,\n                data\n              );\n              if (!parsed.length) {\n                return;\n              }\n              const pending = storage.pendingIcons;\n              if (pending) {\n                parsed.forEach((name) => {\n                  pending.delete(name);\n                });\n              }\n              storeInBrowserStorage(storage, data);\n            } catch (err) {\n              console.error(err);\n            }\n          }\n          loadedNewIcons(storage);\n        });\n      });\n    });\n  }\n}\nconst loadIcons = (icons, callback) => {\n  const cleanedIcons = listToIcons(icons, true, allowSimpleNames());\n  const sortedIcons = sortIcons(cleanedIcons);\n  if (!sortedIcons.pending.length) {\n    let callCallback = true;\n    if (callback) {\n      setTimeout(() => {\n        if (callCallback) {\n          callback(\n            sortedIcons.loaded,\n            sortedIcons.missing,\n            sortedIcons.pending,\n            emptyCallback\n          );\n        }\n      });\n    }\n    return () => {\n      callCallback = false;\n    };\n  }\n  const newIcons = /* @__PURE__ */ Object.create(null);\n  const sources = [];\n  let lastProvider, lastPrefix;\n  sortedIcons.pending.forEach((icon) => {\n    const { provider, prefix } = icon;\n    if (prefix === lastPrefix && provider === lastProvider) {\n      return;\n    }\n    lastProvider = provider;\n    lastPrefix = prefix;\n    sources.push(getStorage(provider, prefix));\n    const providerNewIcons = newIcons[provider] || (newIcons[provider] = /* @__PURE__ */ Object.create(null));\n    if (!providerNewIcons[prefix]) {\n      providerNewIcons[prefix] = [];\n    }\n  });\n  sortedIcons.pending.forEach((icon) => {\n    const { provider, prefix, name } = icon;\n    const storage = getStorage(provider, prefix);\n    const pendingQueue = storage.pendingIcons || (storage.pendingIcons = /* @__PURE__ */ new Set());\n    if (!pendingQueue.has(name)) {\n      pendingQueue.add(name);\n      newIcons[provider][prefix].push(name);\n    }\n  });\n  sources.forEach((storage) => {\n    const { provider, prefix } = storage;\n    if (newIcons[provider][prefix].length) {\n      loadNewIcons(storage, newIcons[provider][prefix]);\n    }\n  });\n  return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\n};\nconst loadIcon = (icon) => {\n  return new Promise((fulfill, reject) => {\n    const iconObj = typeof icon === \"string\" ? stringToIcon(icon) : icon;\n    loadIcons([iconObj || icon], (loaded) => {\n      if (loaded.length && iconObj) {\n        const data = getIconData(iconObj);\n        if (data) {\n          fulfill({\n            ...defaultIconProps,\n            ...data\n          });\n          return;\n        }\n      }\n      reject(icon);\n    });\n  });\n};\n\nfunction toggleBrowserCache(storage, value) {\n  switch (storage) {\n    case \"local\":\n    case \"session\":\n      browserStorageConfig[storage] = value;\n      break;\n    case \"all\":\n      for (const key in browserStorageConfig) {\n        browserStorageConfig[key] = value;\n      }\n      break;\n  }\n}\n\nfunction mergeCustomisations(defaults, item) {\n  const result = {\n    ...defaults\n  };\n  for (const key in item) {\n    const value = item[key];\n    const valueType = typeof value;\n    if (key in defaultIconSizeCustomisations) {\n      if (value === null || value && (valueType === \"string\" || valueType === \"number\")) {\n        result[key] = value;\n      }\n    } else if (valueType === typeof result[key]) {\n      result[key] = key === \"rotate\" ? value % 4 : value;\n    }\n  }\n  return result;\n}\n\nconst separator = /[\\s,]+/;\nfunction flipFromString(custom, flip) {\n  flip.split(separator).forEach((str) => {\n    const value = str.trim();\n    switch (value) {\n      case \"horizontal\":\n        custom.hFlip = true;\n        break;\n      case \"vertical\":\n        custom.vFlip = true;\n        break;\n    }\n  });\n}\n\nfunction rotateFromString(value, defaultValue = 0) {\n  const units = value.replace(/^-?[0-9.]*/, \"\");\n  function cleanup(value2) {\n    while (value2 < 0) {\n      value2 += 4;\n    }\n    return value2 % 4;\n  }\n  if (units === \"\") {\n    const num = parseInt(value);\n    return isNaN(num) ? 0 : cleanup(num);\n  } else if (units !== value) {\n    let split = 0;\n    switch (units) {\n      case \"%\":\n        split = 25;\n        break;\n      case \"deg\":\n        split = 90;\n    }\n    if (split) {\n      let num = parseFloat(value.slice(0, value.length - units.length));\n      if (isNaN(num)) {\n        return 0;\n      }\n      num = num / split;\n      return num % 1 === 0 ? cleanup(num) : 0;\n    }\n  }\n  return defaultValue;\n}\n\nfunction iconToHTML(body, attributes) {\n  let renderAttribsHTML = body.indexOf(\"xlink:\") === -1 ? \"\" : ' xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n  for (const attr in attributes) {\n    renderAttribsHTML += \" \" + attr + '=\"' + attributes[attr] + '\"';\n  }\n  return '<svg xmlns=\"http://www.w3.org/2000/svg\"' + renderAttribsHTML + \">\" + body + \"</svg>\";\n}\n\nfunction encodeSVGforURL(svg) {\n  return svg.replace(/\"/g, \"'\").replace(/%/g, \"%25\").replace(/#/g, \"%23\").replace(/</g, \"%3C\").replace(/>/g, \"%3E\").replace(/\\s+/g, \" \");\n}\nfunction svgToURL(svg) {\n  return 'url(\"data:image/svg+xml,' + encodeSVGforURL(svg) + '\")';\n}\n\nconst defaultExtendedIconCustomisations = {\n    ...defaultIconCustomisations,\n    inline: false,\n};\n\n/**\n * Default SVG attributes\n */\nconst svgDefaults = {\n    'xmlns': 'http://www.w3.org/2000/svg',\n    'xmlnsXlink': 'http://www.w3.org/1999/xlink',\n    'aria-hidden': true,\n    'role': 'img',\n};\n/**\n * Style modes\n */\nconst commonProps = {\n    display: 'inline-block',\n};\nconst monotoneProps = {\n    backgroundColor: 'currentColor',\n};\nconst coloredProps = {\n    backgroundColor: 'transparent',\n};\n// Dynamically add common props to variables above\nconst propsToAdd = {\n    Image: 'var(--svg)',\n    Repeat: 'no-repeat',\n    Size: '100% 100%',\n};\nconst propsToAddTo = {\n    webkitMask: monotoneProps,\n    mask: monotoneProps,\n    background: coloredProps,\n};\nfor (const prefix in propsToAddTo) {\n    const list = propsToAddTo[prefix];\n    for (const prop in propsToAdd) {\n        list[prefix + prop] = propsToAdd[prop];\n    }\n}\n/**\n * Default values for customisations for inline icon\n */\nconst inlineDefaults = {\n    ...defaultExtendedIconCustomisations,\n    inline: true,\n};\n/**\n * Fix size: add 'px' to numbers\n */\nfunction fixSize(value) {\n    return value + (value.match(/^[-0-9.]+$/) ? 'px' : '');\n}\n/**\n * Render icon\n */\nconst render = (\n// Icon must be validated before calling this function\nicon, \n// Partial properties\nprops, \n// True if icon should have vertical-align added\ninline, \n// Optional reference for SVG/SPAN, extracted by React.forwardRef()\nref) => {\n    // Get default properties\n    const defaultProps = inline\n        ? inlineDefaults\n        : defaultExtendedIconCustomisations;\n    // Get all customisations\n    const customisations = mergeCustomisations(defaultProps, props);\n    // Check mode\n    const mode = props.mode || 'svg';\n    // Create style\n    const style = {};\n    const customStyle = props.style || {};\n    // Create SVG component properties\n    const componentProps = {\n        ...(mode === 'svg' ? svgDefaults : {}),\n        ref,\n    };\n    // Get element properties\n    for (let key in props) {\n        const value = props[key];\n        if (value === void 0) {\n            continue;\n        }\n        switch (key) {\n            // Properties to ignore\n            case 'icon':\n            case 'style':\n            case 'children':\n            case 'onLoad':\n            case 'mode':\n            case '_ref':\n            case '_inline':\n                break;\n            // Boolean attributes\n            case 'inline':\n            case 'hFlip':\n            case 'vFlip':\n                customisations[key] =\n                    value === true || value === 'true' || value === 1;\n                break;\n            // Flip as string: 'horizontal,vertical'\n            case 'flip':\n                if (typeof value === 'string') {\n                    flipFromString(customisations, value);\n                }\n                break;\n            // Color: copy to style\n            case 'color':\n                style.color = value;\n                break;\n            // Rotation as string\n            case 'rotate':\n                if (typeof value === 'string') {\n                    customisations[key] = rotateFromString(value);\n                }\n                else if (typeof value === 'number') {\n                    customisations[key] = value;\n                }\n                break;\n            // Remove aria-hidden\n            case 'ariaHidden':\n            case 'aria-hidden':\n                if (value !== true && value !== 'true') {\n                    delete componentProps['aria-hidden'];\n                }\n                break;\n            // Copy missing property if it does not exist in customisations\n            default:\n                if (defaultProps[key] === void 0) {\n                    componentProps[key] = value;\n                }\n        }\n    }\n    // Generate icon\n    const item = iconToSVG(icon, customisations);\n    const renderAttribs = item.attributes;\n    // Inline display\n    if (customisations.inline) {\n        style.verticalAlign = '-0.125em';\n    }\n    if (mode === 'svg') {\n        // Add style\n        componentProps.style = {\n            ...style,\n            ...customStyle,\n        };\n        // Add icon stuff\n        Object.assign(componentProps, renderAttribs);\n        // Counter for ids based on \"id\" property to render icons consistently on server and client\n        let localCounter = 0;\n        let id = props.id;\n        if (typeof id === 'string') {\n            // Convert '-' to '_' to avoid errors in animations\n            id = id.replace(/-/g, '_');\n        }\n        // Add icon stuff\n        componentProps.dangerouslySetInnerHTML = {\n            __html: replaceIDs(item.body, id ? () => id + 'ID' + localCounter++ : 'iconifyReact'),\n        };\n        return React.createElement('svg', componentProps);\n    }\n    // Render <span> with style\n    const { body, width, height } = icon;\n    const useMask = mode === 'mask' ||\n        (mode === 'bg' ? false : body.indexOf('currentColor') !== -1);\n    // Generate SVG\n    const html = iconToHTML(body, {\n        ...renderAttribs,\n        width: width + '',\n        height: height + '',\n    });\n    // Generate style\n    componentProps.style = {\n        ...style,\n        '--svg': svgToURL(html),\n        'width': fixSize(renderAttribs.width),\n        'height': fixSize(renderAttribs.height),\n        ...commonProps,\n        ...(useMask ? monotoneProps : coloredProps),\n        ...customStyle,\n    };\n    return React.createElement('span', componentProps);\n};\n\n/**\n * Enable cache\n */\nfunction enableCache(storage) {\n    toggleBrowserCache(storage, true);\n}\n/**\n * Disable cache\n */\nfunction disableCache(storage) {\n    toggleBrowserCache(storage, false);\n}\n/**\n * Initialise stuff\n */\n// Enable short names\nallowSimpleNames(true);\n// Set API module\nsetAPIModule('', fetchAPIModule);\n/**\n * Browser stuff\n */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    // Set cache and load existing cache\n    initBrowserStorage();\n    const _window = window;\n    // Load icons from global \"IconifyPreload\"\n    if (_window.IconifyPreload !== void 0) {\n        const preload = _window.IconifyPreload;\n        const err = 'Invalid IconifyPreload syntax.';\n        if (typeof preload === 'object' && preload !== null) {\n            (preload instanceof Array ? preload : [preload]).forEach((item) => {\n                try {\n                    if (\n                    // Check if item is an object and not null/array\n                    typeof item !== 'object' ||\n                        item === null ||\n                        item instanceof Array ||\n                        // Check for 'icons' and 'prefix'\n                        typeof item.icons !== 'object' ||\n                        typeof item.prefix !== 'string' ||\n                        // Add icon set\n                        !addCollection(item)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            });\n        }\n    }\n    // Set API from global \"IconifyProviders\"\n    if (_window.IconifyProviders !== void 0) {\n        const providers = _window.IconifyProviders;\n        if (typeof providers === 'object' && providers !== null) {\n            for (let key in providers) {\n                const err = 'IconifyProviders[' + key + '] is invalid.';\n                try {\n                    const value = providers[key];\n                    if (typeof value !== 'object' ||\n                        !value ||\n                        value.resources === void 0) {\n                        continue;\n                    }\n                    if (!addAPIProvider(key, value)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            }\n        }\n    }\n}\nclass IconComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // Render placeholder before component is mounted\n            icon: null,\n        };\n    }\n    /**\n     * Abort loading icon\n     */\n    _abortLoading() {\n        if (this._loading) {\n            this._loading.abort();\n            this._loading = null;\n        }\n    }\n    /**\n     * Update state\n     */\n    _setData(icon) {\n        if (this.state.icon !== icon) {\n            this.setState({\n                icon,\n            });\n        }\n    }\n    /**\n     * Check if icon should be loaded\n     */\n    _checkIcon(changed) {\n        const state = this.state;\n        const icon = this.props.icon;\n        // Icon is an object\n        if (typeof icon === 'object' &&\n            icon !== null &&\n            typeof icon.body === 'string') {\n            // Stop loading\n            this._icon = '';\n            this._abortLoading();\n            if (changed || state.icon === null) {\n                // Set data if it was changed\n                this._setData({\n                    data: icon,\n                });\n            }\n            return;\n        }\n        // Invalid icon?\n        let iconName;\n        if (typeof icon !== 'string' ||\n            (iconName = stringToIcon(icon, false, true)) === null) {\n            this._abortLoading();\n            this._setData(null);\n            return;\n        }\n        // Load icon\n        const data = getIconData(iconName);\n        if (!data) {\n            // Icon data is not available\n            if (!this._loading || this._loading.name !== icon) {\n                // New icon to load\n                this._abortLoading();\n                this._icon = '';\n                this._setData(null);\n                if (data !== null) {\n                    // Icon was not loaded\n                    this._loading = {\n                        name: icon,\n                        abort: loadIcons([iconName], this._checkIcon.bind(this, false)),\n                    };\n                }\n            }\n            return;\n        }\n        // Icon data is available\n        if (this._icon !== icon || state.icon === null) {\n            // New icon or icon has been loaded\n            this._abortLoading();\n            this._icon = icon;\n            // Add classes\n            const classes = ['iconify'];\n            if (iconName.prefix !== '') {\n                classes.push('iconify--' + iconName.prefix);\n            }\n            if (iconName.provider !== '') {\n                classes.push('iconify--' + iconName.provider);\n            }\n            // Set data\n            this._setData({\n                data,\n                classes,\n            });\n            if (this.props.onLoad) {\n                this.props.onLoad(icon);\n            }\n        }\n    }\n    /**\n     * Component mounted\n     */\n    componentDidMount() {\n        this._checkIcon(false);\n    }\n    /**\n     * Component updated\n     */\n    componentDidUpdate(oldProps) {\n        if (oldProps.icon !== this.props.icon) {\n            this._checkIcon(true);\n        }\n    }\n    /**\n     * Abort loading\n     */\n    componentWillUnmount() {\n        this._abortLoading();\n    }\n    /**\n     * Render\n     */\n    render() {\n        const props = this.props;\n        const icon = this.state.icon;\n        if (icon === null) {\n            // Render placeholder\n            return props.children\n                ? props.children\n                : React.createElement('span', {});\n        }\n        // Add classes\n        let newProps = props;\n        if (icon.classes) {\n            newProps = {\n                ...props,\n                className: (typeof props.className === 'string'\n                    ? props.className + ' '\n                    : '') + icon.classes.join(' '),\n            };\n        }\n        // Render icon\n        return render({\n            ...defaultIconProps,\n            ...icon.data,\n        }, newProps, props._inline, props._ref);\n    }\n}\n/**\n * Block icon\n *\n * @param props - Component properties\n */\nconst Icon = React.forwardRef(function Icon(props, ref) {\n    const newProps = {\n        ...props,\n        _ref: ref,\n        _inline: false,\n    };\n    return React.createElement(IconComponent, newProps);\n});\n/**\n * Inline icon (has negative verticalAlign that makes it behave like icon font)\n *\n * @param props - Component properties\n */\nconst InlineIcon = React.forwardRef(function InlineIcon(props, ref) {\n    const newProps = { ...props, _ref: ref, _inline: true };\n    return React.createElement(IconComponent, newProps);\n});\n/**\n * Internal API\n */\nconst _api = {\n    getAPIConfig,\n    setAPIModule,\n    sendAPIQuery,\n    setFetch,\n    getFetch,\n    listAPIProviders,\n};\n\nexport { Icon, InlineIcon, _api, addAPIProvider, addCollection, addIcon, iconToSVG as buildIcon, calculateSize, disableCache, enableCache, getIcon, iconExists, listIcons, loadIcon, loadIcons, replaceIDs };\n"],"names":["matchIconName","stringToIcon","value","validate","allowSimpleName","provider","colonSeparated","split","slice","length","shift","name2","pop","prefix","result","name","validateIconName","dashSeparated","join","icon","match","defaultIconDimensions","Object","freeze","left","top","width","height","defaultIconTransformations","rotate","vFlip","hFlip","defaultIconProps","defaultExtendedIconProps","body","hidden","mergeIconData","parent","child","obj1","obj2","mergeIconTransformations","key","internalGetIconData","data","tree","icons","aliases","currentProps","parse","forEach","parseIconSet","callback","names","not_found","Array","push","resolved","create","keys","concat","resolve","getIconsTree","item","optionalPropertyDefaults","checkOptionalProps","defaults","prop","quicklyValidateIconSet","obj","dataStorage","getStorage","providerStorage","missing","Set","newStorage","addIconSet","storage","add","simpleNames","allowSimpleNames","allow","getIconData","iconName","has","addIcon","err","addIconToStorage","defaultIconSizeCustomisations","defaultIconCustomisations","unitsSplit","unitsTest","calculateSize","size","ratio","precision","Math","ceil","oldParts","newParts","code","isNumber","test","num","parseFloat","isNaN","regex","randomPrefix","Date","now","toString","random","counter","replaceIDs","ids","exec","id","newID","escapedID","replace","RegExp","setAPIModule","getAPIModule","createAPIConfig","source","resources","path","maxURL","timeout","index","dataAfterTimeout","configStorage","fallBackAPISources","fallBackAPI","addAPIProvider","customConfig","config","getAPIConfig","fetchModule","fetch","detectFetch","fetchAPIModule","prepare","results","maxLength","maxHostLength","host","max","url","calculateMaxLength","type","send","params","getPath","iconsList","URLSearchParams","uri","defaultError","then","response","status","json","setTimeout","shouldAbort","catch","removeCallback","storages","items","loaderCallbacks","filter","row","idCounter","defaultConfig","sendQuery","payload","query","done","resourcesCount","startIndex","floor","list","nextIndex","lastError","startTime","queriesSent","timer","queue","doneCallbacks","resetTimer","clearTimeout","abort","subscribe","overwrite","failQuery","clearQueue","execNext","resource","status2","isError","queued","indexOf","moduleResponse","queriesPending","initRedundancy","cfg","queries","cleanup","instance","queryCallback","doneCallback","query2","error","find","setIndex","getIndex","emptyCallback$1","redundancyCache","sendAPIQuery","target","redundancy","api","cached","cachedReundancy","getRedundancyCache","browserCacheVersion","browserCachePrefix","browserCacheCountKey","browserCacheVersionKey","browserStorageHour","getStoredItem","func","getItem","setStoredItem","setItem","removeStoredItem","removeItem","setBrowserStorageItemsCount","getBrowserStorageItemsCount","parseInt","browserStorageConfig","local","session","browserStorageEmptyItems","browserStorageStatus","_window","window","getBrowserStorage","attr","iterateBrowserStorage","version","total2","i","minTime","parseItem","JSON","total","initBrowserStorage","iconSet","lastModified","lastModifiedCached","min","storeInBrowserStorage","store","set","delete","from","stringify","lastValue","updateLastModified","assign","emptyCallback","loadedNewIcons","iconsLoaderFlag","pendingCallbacksFlag","hasPending","oldLength","pending","loaded","updateCallbacks","loadIcons","cleanedIcons","listToIcons","sortedIcons","sort","a","b","localeCompare","lastIcon","localStorage","sortIcons","callCallback","lastProvider","lastPrefix","newIcons","sources","providerNewIcons","pendingQueue","pendingIcons","iconsToLoad","iconsQueueFlag","icons2","parsed","console","loadNewIcons","pendingSources","bind","storeCallback","separator","flipFromString","custom","flip","str","trim","rotateFromString","defaultValue","units","value2","defaultExtendedIconCustomisations","inline","svgDefaults","commonProps","display","monotoneProps","backgroundColor","coloredProps","propsToAdd","Image","Repeat","Size","propsToAddTo","webkitMask","mask","background","inlineDefaults","fixSize","render","props","ref","defaultProps","customisations","valueType","mergeCustomisations","mode","style","customStyle","componentProps","color","fullIcon","fullCustomisations","box","tempValue","transformations","rotation","unshift","customisationsWidth","customisationsHeight","boxWidth","boxHeight","attributes","viewBox","iconToSVG","renderAttribs","verticalAlign","localCounter","dangerouslySetInnerHTML","__html","React","svg","useMask","html","renderAttribsHTML","iconToHTML","encodeSVGforURL","document","IconifyPreload","preload","added","addCollection","e","IconifyProviders","providers","IconComponent","state","this","_loading","setState","changed","_icon","_abortLoading","_setData","classes","onLoad","_checkIcon","oldProps","children","newProps","className","_inline","_ref","Icon"],"sourceRoot":""}